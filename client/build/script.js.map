{
  "version": 3,
  "sources": ["../build/_snowpack/pkg/common/index-8ac87802.js", "../build/_snowpack/pkg/common/index-dcbd1b2d.js", "../build/_snowpack/pkg/common/index-1a69948f.js", "../build/_snowpack/pkg/common/base64-arraybuffer.es5-d348599b.js", "../build/_snowpack/pkg/common/index-15886b84.js", "../build/_snowpack/pkg/common/index-fe6788f5.js", "../build/_snowpack/pkg/common/index-66fac5a5.js", "../build/_snowpack/pkg/common/socket-e052c253.js", "../build/_snowpack/pkg/common/index-4ed0b318.js", "../build/_snowpack/pkg/common/index-785d1bab.js", "../build/_snowpack/pkg/socket.io-client.js", "../build/script.js"],
  "sourcesContent": ["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nvar parseuri = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n\nexport { parseuri as p };\n", "function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar hasCors = createCommonjsModule(function (module) {\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n});\n\nexport { hasCors as h };\n", "/**\n * Expose `Emitter`.\n */\n\nvar Emitter_1 = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\nexport { Emitter_1 as E };\n", "/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode as d };\n", "import { d as decode } from './base64-arraybuffer.es5-d348599b.js';\n\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\n\nconst withNativeArrayBuffer$1 = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer$1) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nconst protocol = 4;\n\nexport { decodePayload as a, encodePacket as b, decodePacket as d, encodePayload as e, protocol as p };\n", "var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nvar yeast_1 = yeast;\n\nexport { yeast_1 as y };\n", "/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nvar encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nvar decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\nvar parseqs = {\n\tencode: encode,\n\tdecode: decode\n};\n\nexport { parseqs as p };\n", "import { h as hasCors } from './index-dcbd1b2d.js';\nimport { E as Emitter_1 } from './index-1a69948f.js';\nimport { d as decodePacket, a as decodePayload, e as encodePayload, b as encodePacket, p as protocol } from './index-15886b84.js';\nimport { y as yeast_1 } from './index-fe6788f5.js';\nimport { p as parseqs } from './index-66fac5a5.js';\nimport './base64-arraybuffer.es5-d348599b.js';\nimport { p as parseuri } from './index-8ac87802.js';\n\nvar globalThis = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n\n// browser shim for xmlhttprequest module\nfunction XMLHttpRequest$1 (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCors)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n\nfunction pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nfunction installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n\nclass Transport extends Emitter_1 {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n\nclass Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast_1();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n\n/* global attachEvent */\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest$1({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nclass Request extends Emitter_1 {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest$1(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n\nconst nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nconst WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nconst usingBrowserWebSocket = true;\nconst defaultBinaryType = \"arraybuffer\";\n\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nclass WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast_1();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n\nconst transports = {\n    websocket: WS,\n    polling: XHR\n};\n\nclass Socket extends Emitter_1 {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n\nexport { Socket as S, installTimerFunctions as i };\n", "import { E as Emitter_1 } from './index-1a69948f.js';\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n\n/**\n * Protocol version.\n *\n * @public\n */\nconst protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter_1 {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\nvar parser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    protocol: protocol,\n    get PacketType () { return PacketType; },\n    Encoder: Encoder,\n    Decoder: Decoder\n});\n\nexport { Decoder as D, Encoder as E, PacketType as P, protocol as a, parser as p };\n", "/**\n * Expose `Backoff`.\n */\n\nvar backo2 = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\nexport { backo2 as b };\n", "import { p as parseuri } from './common/index-8ac87802.js';\nimport { i as installTimerFunctions, S as Socket$1 } from './common/socket-e052c253.js';\nimport './common/index-15886b84.js';\nimport './common/base64-arraybuffer.es5-d348599b.js';\nimport { E as Emitter_1 } from './common/index-1a69948f.js';\nimport { P as PacketType, p as parser } from './common/index-4ed0b318.js';\nimport { b as backo2 } from './common/index-785d1bab.js';\nimport './common/index-dcbd1b2d.js';\nimport './common/index-fe6788f5.js';\nimport './common/index-66fac5a5.js';\n\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends Emitter_1 {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) ;\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n\nclass Manager extends Emitter_1 {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Socket$1(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n\nexport { lookup as io };\n", "import { io } from \"./_snowpack/pkg/socket.io-client.js\";\r\n\r\nconst page = document.getElementById('page')\r\nconst apikey = \"08c4ceb2-57c6-4db8-83bc-6610830752d1\"\r\nconst caturl = \"https://api.thecatapi.com/v1/images/search\"\r\n\r\n\r\nconst socket = io({\r\n    auth: (id) => {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        if(typeof userId == 'string'){\r\n            id({\r\n                token:userId\r\n            })}\r\n        else{\r\n            id({\r\n                token:\"noId\"\r\n            });\r\n        }\r\n        \r\n    }\r\n});\r\n\r\nconst popup = document.getElementById('login-popup');\r\n\r\nsocket.on(\"setId\", () =>{\r\n    popup.style.display = 'block';\r\n})\r\n\r\nlet userrecognised = false\r\nlet uname = 'turtle'\r\nlet myexp729373 = 0\r\n\r\nsocket.on('user recognised', ()=>{\r\n    userrecognised = true;\r\n})\r\n\r\nsocket.on('alldata', (data)=>{\r\n    data.forEach(row => {\r\n        let slot = document.createElement('div');\r\n        slot.classList.add('slot')\r\n        page.appendChild(slot);\r\n        let exp = document.createElement('div');\r\n        exp.classList.add('exp')\r\n        exp.textContent = row.num\r\n        exp.id = row.name\r\n        slot.style.backgroundColor = colour(row.num)\r\n        if(userrecognised == true){\r\n            if(row.Id == localStorage.getItem(\"userId\")){\r\n                exp.id = row.Id\r\n                uname = row.name\r\n                myexp729373 = row.num\r\n            }\r\n             \r\n        }\r\n        slot.appendChild(exp);\r\n        let tag = document.createElement('div');\r\n        tag.classList.add('name')\r\n        tag.textContent = row.name\r\n        slot.appendChild(tag);\r\n    });\r\n    if(userrecognised == true){\r\n        const mySlot = document.getElementById(localStorage.getItem(\"userId\"))\r\n        if(mySlot !== null){\r\n            page.scrollTop = mySlot.offsetTop - (height*0.5) +50\r\n            page.scrollLeft = mySlot.offsetLeft - (width*0.5) +50\r\n        }else{\r\n            alert(\"Your id wasn't found in the database, please clear your local storage for this site to make a new one\")\r\n        }\r\n    }\r\n})\r\n\r\nconst login = document.getElementById('login')\r\nconst usernamein = login.elements['username']\r\n\r\nlogin.onsubmit = function validate(){\r\n    const errbox = document.getElementById('error')\r\n    uname = usernamein.value\r\n    if(uname == ''){\r\n        errbox.textContent = 'Enter a username.'\r\n        errbox.style.display = 'block';\r\n        document.addEventListener('click', (e) =>{\r\n            errbox.style.display = 'none'\r\n            document.removeEventListener('click', (e))\r\n        })\r\n    }\r\n    else{\r\n        socket.emit('usernamein', uname)}\r\n    return false;\r\n}\r\n\r\nsocket.on('nametaken', (e)=>{\r\n    const errbox = document.getElementById('error')\r\n    errbox.textContent = 'That username is taken.'\r\n    errbox.style.display = 'block';\r\n    document.addEventListener('click', (g) =>{\r\n        errbox.style.display = 'none'\r\n        document.removeEventListener('click', (g))\r\n    })\r\n\r\n})\r\n\r\nsocket.on('badname', ()=>{\r\n    const errbox = document.getElementById('error')\r\n    errbox.textContent = 'That username is inappropriate.'\r\n    errbox.style.display = 'block';\r\n    document.addEventListener('click', (g) =>{\r\n        errbox.style.display = 'none'\r\n        document.removeEventListener('click', (g))\r\n    })\r\n})\r\n\r\nsocket.on('namevalid', (id)=>{\r\n    popup.style.display = 'none'\r\n    localStorage.setItem(\"userId\", id);\r\n    console.log('set')\r\n    let userslot = document.createElement('div');\r\n    userslot.classList.add('slot')\r\n    page.appendChild(userslot)\r\n    let userexp = document.createElement('div');\r\n    userexp.classList.add('exp')\r\n    userexp.id = localStorage.getItem('userId')\r\n    userexp.textContent = '0'\r\n    userslot.appendChild(userexp)\r\n    let usertag = document.createElement('div');\r\n    usertag.classList.add('name')\r\n    usertag.textContent = uname\r\n    userslot.appendChild(usertag);\r\n    page.scrollTop = userslot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = userslot.offsetLeft - (width*0.5) +50\r\n    document.body.style.zoom = 200%\r\n    \r\n    socket.emit('newuser',uname)\r\n    let hint = document.getElementById('hint')\r\n    hint.style.display = 'inline'\r\n})\r\n\r\nsocket.on('ping', (pingdata)=>{\r\n    pingdata.forEach(row =>{\r\n        let exp = document.getElementById(row.name)\r\n        if( exp !== null){\r\n            exp.textContent = row.num\r\n            let slot = exp.parentElement\r\n            slot.style.backgroundColor = colour(row.num)\r\n            if(row.num >= 200000000){\r\n                slot.style.backgroundColor = 'gold'\r\n                \r\n            }\r\n        }\r\n    });\r\n    let myId = localStorage.getItem('userId')\r\n    let myexp = document.getElementById(myId)\r\n    if( myexp !== null){\r\n        if(Number.isInteger(Number(myexp729373)) == false){\r\n            myexp.textContent = 0\r\n        }\r\n        socket.emit('clientping',myexp729373,myId)\r\n        if(myexp729373 >= 200000000){\r\n            let myslot = myexp.parentElement\r\n            myslot.style.backgroundcolor = 'gold'\r\n    \r\n        }\r\n    }\r\n    const top0 = document.getElementById('topexp0')\r\n    const top1 = document.getElementById('topexp1')\r\n    const top2 = document.getElementById('topexp2')\r\n    const top3 = document.getElementById('topexp3')\r\n    const top4 = document.getElementById('topexp4')\r\n    if(top0.textContent >= 200000000){\r\n        top0.style.color = 'gold'\r\n        top0.style.fontWeight = 'bold'\r\n    }\r\n    if(top1.textContent >= 200000000){\r\n        top1.style.color = 'gold'\r\n        top1.style.fontWeight = 'bold'\r\n    }\r\n    if(top2.textContent >= 200000000){\r\n        top2.style.color = 'gold'\r\n        top2.style.fontWeight = 'bold'\r\n    }\r\n    if(top3.textContent >= 200000000){\r\n        top3.style.color = 'gold'\r\n        top3.style.fontWeight = 'bold'\r\n    }\r\n    if(top3.textContent >= 200000000){\r\n        top3.style.color = 'gold'\r\n        top3.style.fontWeight = 'bold'\r\n    }\r\n    if(top4.textContent >= 200000000){\r\n        top4.style.color = 'gold'\r\n        top4.style.fontWeight = 'bold'\r\n    }\r\n    \r\n});\r\n\r\nsocket.on('newuserout',(newname)=>{\r\n    let newslot = document.createElement('div');\r\n    newslot.classList.add('slot')\r\n    page.appendChild(newslot)\r\n    let newexp = document.createElement('div');\r\n    newexp.classList.add('exp')\r\n    newexp.id = newname\r\n    newexp.textContent = '0'\r\n    newslot.appendChild(newexp)\r\n    let newtag = document.createElement('div');\r\n    newtag.classList.add('name')\r\n    newtag.textContent = newname\r\n    newslot.appendChild(newtag);\r\n})\r\n\r\nconst daycount = document.getElementById('day')\r\nlet daynow = Date.now()\r\nlet day = Math.round((daynow - 1648587139770) / (1000 * 60 * 60 * 24));\r\ndaycount.textContent = 'Day:'+day\r\ndaycount.title = 'Highest feasable score is ≈'+day*201600 \r\n// 201600 is average of 3 10s spams multiplied by 10h per day\r\n// with this formula gold would take 992 days!\r\n\r\nlet leaderopen = false\r\nlet infoopen = false\r\n\r\nconst sharebtn = document.getElementById('share')\r\nconst sharepopup = document.getElementById('sharepopup')\r\n\r\nsharebtn.onclick = ()=>{\r\n    const myID = localStorage.getItem(\"userId\")\r\n    const myexp = document.getElementById(myID)\r\n    leaderdrop.style.display = 'none'\r\n    leaderopen = false\r\n    infodrop.style.display = 'none'\r\n    infoopen = false\r\n\r\n    if(myID !== null){\r\n        navigator.clipboard.writeText('SpacebarMMO Name:'+uname+' Score:'+myexp.textContent+' https://spacebarmmo.com')\r\n        sharepopup.textContent = 'Copied link to clipboard.'\r\n        sharepopup.style.display = 'inline-block';\r\n    }\r\n    else{\r\n        sharepopup.textContent = 'Play the game first.'\r\n        sharepopup.style.display = 'inline-block';\r\n    }\r\n}\r\nsharebtn.onmouseleave = () =>{\r\n    sharepopup.style.display = 'none'\r\n}\r\n\r\nconst leaderbtn = document.getElementById('leaderboard')\r\nconst leaderdrop = document.getElementById('leaderdrop')\r\nconst leaderclose = document.getElementById('leaderclose')\r\n\r\nleaderbtn.onclick = ()=>{\r\n    infodrop.style.display = 'none'\r\n    infoopen = false\r\n    if(leaderopen == true){   \r\n        leaderdrop.style.display = 'none'\r\n        leaderopen = false\r\n    }\r\n    else{\r\n        leaderdrop.style.display = 'flex'\r\n        leaderopen = true\r\n    }\r\n}\r\n\r\nleaderclose.onclick = ()=>{\r\n    leaderdrop.style.display = 'none';\r\n    leaderopen = false\r\n}\r\n\r\nsocket.on('leaderout',(top5)=>{\r\n    for (let i in [0,1,2,3,4]){\r\n        let leadername = document.getElementById('topname'+i)\r\n        if(top5[i] !== undefined){\r\n            leadername.textContent = top5[i].name\r\n        }\r\n        let leaderexp = document.getElementById('topexp'+i)\r\n        if(top5[i] !== undefined){\r\n            leaderexp.textContent = top5[i].num\r\n        }\r\n    }\r\n})\r\n\r\nconst info = document.getElementById('info')\r\nconst infodrop = document.getElementById('infodrop')\r\nconst infoclose = document.getElementById('infoclose')\r\n\r\ninfo.onclick = ()=>{\r\n    leaderdrop.style.display = 'none'\r\n    leaderopen = false\r\n\r\n    if(infoopen == true){\r\n        infodrop.style.display = 'none'\r\n        infoopen = false\r\n    }\r\n    else{\r\n        infodrop.style.display = 'block'\r\n        infoopen = true\r\n    }\r\n    \r\n}\r\n\r\ninfoclose.onclick = () =>{\r\n    infodrop.style.display = 'none'\r\n    infoopen = false\r\n}\r\n\r\n//leaderboard buttons\r\n\r\nconst topbtn0 = document.getElementById('leaderbtn0')\r\nconst topbtn1 = document.getElementById('leaderbtn1')\r\nconst topbtn2 = document.getElementById('leaderbtn2')\r\nconst topbtn3 = document.getElementById('leaderbtn3')\r\nconst topbtn4 = document.getElementById('leaderbtn4')\r\n\r\nconst width  = window.innerWidth || document.documentElement.clientWidth || \r\ndocument.body.clientWidth;\r\nconst height = window.innerHeight|| document.documentElement.clientHeight|| \r\ndocument.body.clientHeight;\r\n\r\ntopbtn0.onclick = () =>{\r\n    let top0name = document.getElementById('topname0').textContent\r\n    if(top0name !==null){\r\n    let top0slot = document.getElementById(top0name)\r\n    if(top0slot == null){\r\n        let top0id = localStorage.getItem(\"userId\")\r\n        top0slot =  document.getElementById(top0id)\r\n    }\r\n    if(top0slot !==null){\r\n    page.scrollTop = top0slot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = top0slot.offsetLeft - (width*0.5) +50\r\n    }\r\n}}\r\n\r\ntopbtn1.onclick = () =>{\r\n    let top1name = document.getElementById('topname1').textContent\r\n    if(top1name !==null){\r\n    let top1slot = document.getElementById(top1name)\r\n    if(top1slot == null){\r\n        let top1id = localStorage.getItem(\"userId\")\r\n        top1slot =  document.getElementById(top1id)\r\n    }\r\n    if(top1slot !==null){\r\n    page.scrollTop = top1slot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = top1slot.offsetLeft - (width*0.5) +50\r\n    }\r\n}}\r\n\r\ntopbtn2.onclick = () =>{\r\n    let top2name = document.getElementById('topname2').textContent\r\n    if(top2name !==null){\r\n    let top2slot = document.getElementById(top2name)\r\n    if(top2slot == null){\r\n        let top2id = localStorage.getItem(\"userId\")\r\n        top2slot =  document.getElementById(top2id)\r\n    }\r\n    if(top2slot !==null){\r\n    page.scrollTop = top2slot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = top2slot.offsetLeft - (width*0.5) +50\r\n    }\r\n}}\r\n\r\ntopbtn3.onclick = () =>{\r\n    let top3name = document.getElementById('topname3').textContent\r\n    if(top3name !==null){\r\n    let top3slot = document.getElementById(top3name)\r\n    if(top3slot == null){\r\n        let top3id = localStorage.getItem(\"userId\")\r\n        top3slot =  document.getElementById(top3id)\r\n    }\r\n    if(top3slot !==null){\r\n    page.scrollTop = top3slot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = top3slot.offsetLeft - (width*0.5) +50\r\n    }\r\n}}\r\n\r\ntopbtn4.onclick = () =>{\r\n    let top4name = document.getElementById('topname4').textContent\r\n    if(top4name !==null){\r\n    let top4slot = document.getElementById(top4name)\r\n    if(top4slot == null){\r\n        let top4id = localStorage.getItem(\"userId\")\r\n        top4slot =  document.getElementById(top4id)\r\n    }\r\n    if(top4slot !==null){\r\n    page.scrollTop = top4slot.offsetTop - (height*0.5) +50\r\n    page.scrollLeft = top4slot.offsetLeft - (width*0.5) +50\r\n    }\r\n}}\r\n\r\n\r\nconst locatebtn = document.getElementById('locate')\r\n\r\nlocatebtn.onclick = () => {\r\n    const myID = localStorage.getItem(\"userId\")\r\n    if(myID !== null){\r\n        let mySlot = document.getElementById(myID)\r\n        page.scrollTop = mySlot.offsetTop - (height*0.5) +50\r\n        page.scrollLeft = mySlot.offsetLeft - (width*0.5) +50\r\n    }\r\n}\r\n\r\nconst togglespace = document.getElementById('togglespace')\r\nconst mobilespace = document.getElementById('mobilespace')\r\nlet spaceopen = false\r\n\r\ntogglespace.onclick = () =>{\r\n    \r\n    if(spaceopen == false){\r\n        mobilespace.style.display = 'block'\r\n        spaceopen = true\r\n    }\r\n    else{\r\n        mobilespace.style.display = 'none'\r\n        spaceopen = false\r\n    }\r\n}\r\n\r\n\r\nsocket.io.on('reconnect',(attempt)=>{\r\n    window.location.reload();\r\n})\r\n\r\n//game\r\n\r\nlet hint = document.getElementById('hint')\r\ndocument.addEventListener('keyup', event => {\r\n    if (event.code === 'Space') {\r\n      hint.style.display = 'none' \r\n      const myId = localStorage.getItem(\"userId\")\r\n       if(myId !== null){\r\n        let exp = document.getElementById(myId)\r\n        if(exp !== null){\r\n            myexp729373++\r\n            exp.textContent = myexp729373\r\n            let slot = exp.parentElement\r\n            slot.style.backgroundColor = colour(myexp729373)\r\n            fetch(caturl,{headers: {\r\n                'x-api-key': apikey\r\n              }}).then((response) => {\r\n                return response.json();\r\n              }).then((data) => { \r\n                  slot.style.backgroundImage = `url(${data[0].url}`\r\n                  slot.style.color = \"var(--darkblue)\"\r\n               })\r\n        }\r\n       }\r\n    }\r\n  })\r\n\r\nmobilespace.onclick = () =>{\r\n    const myId = localStorage.getItem('userId')\r\n    hint.style.display = 'none'\r\n    if(myId !== null){\r\n        let exp = document.getElementById(myId)\r\n    if(exp !== null){\r\n        myexp729373++\r\n        exp.textContent = myexp729373\r\n        let slot = exp.parentElement\r\n        slot.style.backgroundColor = colour(myexp729373)\r\n        fetch(caturl,{headers: {\r\n            'x-api-key': apikey\r\n          }}).then((response) => {\r\n            return response.json();\r\n          }).then((data) => { \r\n              slot.style.backgroundImage = `url(${data[0].url}`\r\n              slot.style.color = \"var(--darkblue)\"\r\n           })\r\n         \r\n    }\r\n  }\r\n}\r\n\r\nfunction colour(input){ \r\n    let out = [0,0,0]\r\n    out[0] = Math.round(109 - 10*((-1)**input))\r\n    out[1] = Math.round(142 + 40*((-1)**input))\r\n    out[2] = (230 + 50*(Math.round(Math.cos(0.0005*input)-1)))\r\n    return `rgb(${out[0]},${out[1]},${out[2]})` \r\n}\r\n\r\n"],
  "mappings": "AAOA,GAAI,IAAK,0OAEL,GAAQ,CACR,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAGrI,EAAW,SAAkB,EAAK,CAClC,GAAI,GAAM,EACN,EAAI,EAAI,QAAQ,KAChB,EAAI,EAAI,QAAQ,KAEpB,AAAI,GAAK,IAAM,GAAK,IAChB,GAAM,EAAI,UAAU,EAAG,GAAK,EAAI,UAAU,EAAG,GAAG,QAAQ,KAAM,KAAO,EAAI,UAAU,EAAG,EAAI,SAO9F,OAJI,GAAI,GAAG,KAAK,GAAO,IACnB,EAAM,GACN,EAAI,GAED,KACH,EAAI,GAAM,IAAM,EAAE,IAAM,GAG5B,MAAI,IAAK,IAAM,GAAK,IAChB,GAAI,OAAS,EACb,EAAI,KAAO,EAAI,KAAK,UAAU,EAAG,EAAI,KAAK,OAAS,GAAG,QAAQ,KAAM,KACpE,EAAI,UAAY,EAAI,UAAU,QAAQ,IAAK,IAAI,QAAQ,IAAK,IAAI,QAAQ,KAAM,KAC9E,EAAI,QAAU,IAGlB,EAAI,UAAY,GAAU,EAAK,EAAI,MACnC,EAAI,SAAW,GAAS,EAAK,EAAI,OAE1B,GAGX,YAAmB,EAAK,EAAM,CAC1B,GAAI,GAAO,WACP,EAAQ,EAAK,QAAQ,EAAM,KAAK,MAAM,KAE1C,MAAI,GAAK,OAAO,EAAG,IAAM,KAAO,EAAK,SAAW,IAC5C,EAAM,OAAO,EAAG,GAEhB,EAAK,OAAO,EAAK,OAAS,EAAG,IAAM,KACnC,EAAM,OAAO,EAAM,OAAS,EAAG,GAG5B,EAGX,YAAkB,EAAK,EAAO,CAC1B,GAAI,GAAO,GAEX,SAAM,QAAQ,4BAA6B,SAAU,EAAI,EAAI,EAAI,CAC7D,AAAI,GACA,GAAK,GAAM,KAIZ,EClEX,YAA8B,EAAI,EAAS,EAAQ,CAClD,MAAO,GAAS,CACf,KAAM,EACN,QAAS,GACT,QAAS,SAAU,EAAM,EAAM,CAC9B,MAAO,IAAgB,EAAO,AAAsB,GAAS,KAAQ,EAAO,KAAO,KAElF,EAAG,EAAQ,EAAO,SAAU,EAAO,QAGvC,aAA4B,CAC3B,KAAM,IAAI,OAAM,2EAGjB,GAAI,IAAU,GAAqB,SAAU,EAAQ,CASrD,GAAI,CACF,EAAO,QAAU,MAAO,iBAAmB,aACzC,mBAAqB,IAAI,sBACpB,EAAP,CAGA,EAAO,QAAU,MCzBnB,GAAI,GAAY,EAQhB,WAAiB,EAAK,CACpB,GAAI,EAAK,MAAO,IAAM,GAWxB,YAAe,EAAK,CAClB,OAAS,KAAO,GAAQ,UACtB,EAAI,GAAO,EAAQ,UAAU,GAE/B,MAAO,GAYT,EAAQ,UAAU,GAClB,EAAQ,UAAU,iBAAmB,SAAS,EAAO,EAAG,CACtD,YAAK,WAAa,KAAK,YAAc,GACpC,MAAK,WAAW,IAAM,GAAS,KAAK,WAAW,IAAM,IAAU,IAC7D,KAAK,GACD,MAaT,EAAQ,UAAU,KAAO,SAAS,EAAO,EAAG,CAC1C,YAAc,CACZ,KAAK,IAAI,EAAO,GAChB,EAAG,MAAM,KAAM,WAGjB,SAAG,GAAK,EACR,KAAK,GAAG,EAAO,GACR,MAaT,EAAQ,UAAU,IAClB,EAAQ,UAAU,eAClB,EAAQ,UAAU,mBAClB,EAAQ,UAAU,oBAAsB,SAAS,EAAO,EAAG,CAIzD,GAHA,KAAK,WAAa,KAAK,YAAc,GAGjC,AAAK,UAAU,QAAf,EACF,YAAK,WAAa,GACX,KAIT,GAAI,GAAY,KAAK,WAAW,IAAM,GACtC,GAAI,CAAC,EAAW,MAAO,MAGvB,GAAI,AAAK,UAAU,QAAf,EACF,aAAO,MAAK,WAAW,IAAM,GACtB,KAKT,OADI,GACK,EAAI,EAAG,EAAI,EAAU,OAAQ,IAEpC,GADA,EAAK,EAAU,GACX,IAAO,GAAM,EAAG,KAAO,EAAI,CAC7B,EAAU,OAAO,EAAG,GACpB,MAMJ,MAAI,GAAU,SAAW,GACvB,MAAO,MAAK,WAAW,IAAM,GAGxB,MAWT,EAAQ,UAAU,KAAO,SAAS,EAAM,CACtC,KAAK,WAAa,KAAK,YAAc,GAKrC,OAHI,GAAO,GAAI,OAAM,UAAU,OAAS,GACpC,EAAY,KAAK,WAAW,IAAM,GAE7B,EAAI,EAAG,EAAI,UAAU,OAAQ,IACpC,EAAK,EAAI,GAAK,UAAU,GAG1B,GAAI,EAAW,CACb,EAAY,EAAU,MAAM,GAC5B,OAAS,GAAI,EAAG,EAAM,EAAU,OAAQ,EAAI,EAAK,EAAE,EACjD,EAAU,GAAG,MAAM,KAAM,GAI7B,MAAO,OAIT,EAAQ,UAAU,aAAe,EAAQ,UAAU,KAUnD,EAAQ,UAAU,UAAY,SAAS,EAAM,CAC3C,YAAK,WAAa,KAAK,YAAc,GAC9B,KAAK,WAAW,IAAM,IAAU,IAWzC,EAAQ,UAAU,aAAe,SAAS,EAAM,CAC9C,MAAO,CAAC,CAAE,KAAK,UAAU,GAAO,QCxKlC,GAAI,IAAQ,mEAER,EAAS,MAAO,aAAe,YAAc,GAAK,GAAI,YAAW,KACrE,OAAS,GAAI,EAAG,EAAI,GAAM,OAAQ,IAC9B,EAAO,GAAM,WAAW,IAAM,EAElC,GAAI,IAAS,SAAU,EAAQ,CAC3B,GAAI,GAAe,EAAO,OAAS,IAAM,EAAM,EAAO,OAAQ,EAAG,EAAI,EAAG,EAAU,EAAU,EAAU,EACtG,AAAI,EAAO,EAAO,OAAS,KAAO,KAC9B,KACI,EAAO,EAAO,OAAS,KAAO,KAC9B,KAGR,GAAI,GAAc,GAAI,aAAY,GAAe,EAAQ,GAAI,YAAW,GACxE,IAAK,EAAI,EAAG,EAAI,EAAK,GAAK,EACtB,EAAW,EAAO,EAAO,WAAW,IACpC,EAAW,EAAO,EAAO,WAAW,EAAI,IACxC,EAAW,EAAO,EAAO,WAAW,EAAI,IACxC,EAAW,EAAO,EAAO,WAAW,EAAI,IACxC,EAAM,KAAQ,GAAY,EAAM,GAAY,EAC5C,EAAM,KAAS,GAAW,KAAO,EAAM,GAAY,EACnD,EAAM,KAAS,GAAW,IAAM,EAAM,EAAW,GAErD,MAAO,IC3BX,GAAM,GAAe,OAAO,OAAO,MACnC,EAAa,KAAU,IACvB,EAAa,MAAW,IACxB,EAAa,KAAU,IACvB,EAAa,KAAU,IACvB,EAAa,QAAa,IAC1B,EAAa,QAAa,IAC1B,EAAa,KAAU,IACvB,GAAM,GAAuB,OAAO,OAAO,MAC3C,OAAO,KAAK,GAAc,QAAQ,GAAO,CACrC,EAAqB,EAAa,IAAQ,IAE9C,GAAM,IAAe,CAAE,KAAM,QAAS,KAAM,gBAEtC,GAAiB,MAAO,OAAS,YAClC,MAAO,OAAS,aACb,OAAO,UAAU,SAAS,KAAK,QAAU,2BAC3C,GAAwB,MAAO,cAAgB,WAE/C,GAAS,GACJ,MAAO,aAAY,QAAW,WAC/B,YAAY,OAAO,GACnB,GAAO,EAAI,iBAAkB,aAEjC,EAAe,CAAC,CAAE,OAAM,QAAQ,EAAgB,IAC9C,IAAkB,YAAgB,MAC9B,EACO,EAAS,GAGT,GAAmB,EAAM,GAG/B,IACJ,aAAgB,cAAe,GAAO,IACnC,EACO,EAAS,GAGT,GAAmB,GAAI,MAAK,CAAC,IAAQ,GAI7C,EAAS,EAAa,GAAS,IAAQ,KAE5C,GAAqB,CAAC,EAAM,IAAa,CAC3C,GAAM,GAAa,GAAI,YACvB,SAAW,OAAS,UAAY,CAC5B,GAAM,GAAU,EAAW,OAAO,MAAM,KAAK,GAC7C,EAAS,IAAM,IAEZ,EAAW,cAAc,IAG9B,GAA0B,MAAO,cAAgB,WACjD,EAAe,CAAC,EAAe,IAAe,CAChD,GAAI,MAAO,IAAkB,SACzB,MAAO,CACH,KAAM,UACN,KAAM,GAAU,EAAe,IAGvC,GAAM,GAAO,EAAc,OAAO,GAClC,MAAI,KAAS,IACF,CACH,KAAM,UACN,KAAM,GAAmB,EAAc,UAAU,GAAI,IAG1C,EAAqB,GAIjC,EAAc,OAAS,EACxB,CACE,KAAM,EAAqB,GAC3B,KAAM,EAAc,UAAU,IAEhC,CACE,KAAM,EAAqB,IARxB,IAWT,GAAqB,CAAC,EAAM,IAAe,CAC7C,GAAI,GAAyB,CACzB,GAAM,GAAU,GAAO,GACvB,MAAO,IAAU,EAAS,OAG1B,OAAO,CAAE,OAAQ,GAAM,SAGzB,GAAY,CAAC,EAAM,IAAe,CACpC,OAAQ,OACC,OACD,MAAO,aAAgB,aAAc,GAAI,MAAK,CAAC,IAAS,MACvD,sBAED,MAAO,KAIb,GAAY,OAAO,aAAa,IAChC,GAAgB,CAAC,EAAS,IAAa,CAEzC,GAAM,GAAS,EAAQ,OACjB,EAAiB,GAAI,OAAM,GAC7B,EAAQ,EACZ,EAAQ,QAAQ,CAAC,EAAQ,IAAM,CAE3B,EAAa,EAAQ,GAAO,GAAiB,CACzC,EAAe,GAAK,EAChB,EAAE,IAAU,GACZ,EAAS,EAAe,KAAK,UAKvC,GAAgB,CAAC,EAAgB,IAAe,CAClD,GAAM,GAAiB,EAAe,MAAM,IACtC,EAAU,GAChB,OAAS,GAAI,EAAG,EAAI,EAAe,OAAQ,IAAK,CAC5C,GAAM,GAAgB,EAAa,EAAe,GAAI,GAEtD,GADA,EAAQ,KAAK,GACT,EAAc,OAAS,QACvB,MAGR,MAAO,IAEL,EAAW,ECnIjB,GAAI,IAAW,mEAAmE,MAAM,IACpF,EAAS,GACT,GAAM,GACN,GAAO,EACP,EAAI,EACJ,GASJ,WAAgB,EAAK,CACnB,GAAI,GAAU,GAEd,EACE,GAAU,GAAS,EAAM,GAAU,EACnC,EAAM,KAAK,MAAM,EAAM,SAChB,EAAM,GAEf,MAAO,GAUT,YAAgB,EAAK,CACnB,GAAI,GAAU,EAEd,IAAK,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC1B,EAAU,EAAU,EAAS,GAAI,EAAI,OAAO,IAG9C,MAAO,GAST,YAAiB,CACf,GAAI,GAAM,EAAO,CAAC,GAAI,OAEtB,MAAI,KAAQ,GAAa,IAAO,EAAG,GAAO,GACnC,EAAK,IAAK,EAAO,MAM1B,KAAO,EAAI,EAAQ,IAAK,GAAI,GAAS,IAAM,EAK3C,EAAM,OAAS,EACf,EAAM,OAAS,GACf,GAAI,IAAU,ECzDd,GAAI,IAAS,SAAU,EAAK,CAC1B,GAAI,GAAM,GAEV,OAAS,KAAK,GACZ,AAAI,EAAI,eAAe,IACjB,GAAI,QAAQ,IAAO,KACvB,GAAO,mBAAmB,GAAK,IAAM,mBAAmB,EAAI,KAIhE,MAAO,IAUL,GAAS,SAAS,EAAG,CAGvB,OAFI,GAAM,GACN,EAAQ,EAAG,MAAM,KACZ,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAI,GAAO,EAAM,GAAG,MAAM,KAC1B,EAAI,mBAAmB,EAAK,KAAO,mBAAmB,EAAK,IAE7D,MAAO,IAGL,EAAU,CACb,OAAQ,GACR,OAAQ,IChCT,GAAI,GAAc,KACV,MAAO,OAAS,YACT,KAEF,MAAO,SAAW,YAChB,OAGA,SAAS,oBAKxB,YAA2B,EAAM,CAC7B,GAAM,GAAU,EAAK,QAErB,GAAI,CACA,GAAI,AAAgB,MAAO,iBAAvB,aAA0C,EAAC,GAAW,IACtD,MAAO,IAAI,sBAGZ,EAAP,EACA,GAAI,CAAC,EACD,GAAI,CACA,MAAO,IAAI,GAAW,CAAC,UAAU,OAAO,UAAU,KAAK,MAAM,2BAE1D,EAAP,GAIR,YAAc,KAAQ,EAAM,CACxB,MAAO,GAAK,OAAO,CAAC,EAAK,IACjB,GAAI,eAAe,IACnB,GAAI,GAAK,EAAI,IAEV,GACR,IAGP,GAAM,IAAqB,WACrB,GAAuB,aAC7B,WAA+B,EAAK,EAAM,CACtC,AAAI,EAAK,gBACL,GAAI,aAAe,GAAmB,KAAK,GAC3C,EAAI,eAAiB,GAAqB,KAAK,IAG/C,GAAI,aAAe,WAAW,KAAK,GACnC,EAAI,eAAiB,aAAa,KAAK,IAI/C,oBAAwB,EAAU,CAO9B,YAAY,EAAM,CACd,QACA,KAAK,SAAW,GAChB,EAAsB,KAAM,GAC5B,KAAK,KAAO,EACZ,KAAK,MAAQ,EAAK,MAClB,KAAK,WAAa,GAClB,KAAK,OAAS,EAAK,OASvB,QAAQ,EAAK,EAAM,CACf,GAAM,GAAM,GAAI,OAAM,GAEtB,SAAI,KAAO,iBAEX,EAAI,YAAc,EAClB,MAAM,KAAK,QAAS,GACb,KAOX,MAAO,CACH,MAAI,CAAa,KAAK,aAAlB,UAAgC,AAAO,KAAK,aAAZ,KAChC,MAAK,WAAa,UAClB,KAAK,UAEF,KAOX,OAAQ,CACJ,MAAI,CAAc,KAAK,aAAnB,WAAiC,AAAW,KAAK,aAAhB,SACjC,MAAK,UACL,KAAK,WAEF,KAQX,KAAK,EAAS,CACV,AAAI,AAAW,KAAK,aAAhB,QACA,KAAK,MAAM,GAQnB,QAAS,CACL,KAAK,WAAa,OAClB,KAAK,SAAW,GAChB,MAAM,KAAK,QAQf,OAAO,EAAM,CACT,GAAM,GAAS,EAAa,EAAM,KAAK,OAAO,YAC9C,KAAK,SAAS,GAOlB,SAAS,EAAQ,CACb,MAAM,KAAK,SAAU,GAOzB,SAAU,CACN,KAAK,WAAa,SAClB,MAAM,KAAK,WAInB,gBAAsB,GAAU,CAC5B,aAAc,CACV,MAAM,GAAG,WACT,KAAK,QAAU,MAKf,OAAO,CACP,MAAO,UAQX,QAAS,CACL,KAAK,OAQT,MAAM,EAAS,CACX,KAAK,WAAa,UAClB,GAAM,GAAQ,IAAM,CAChB,KAAK,WAAa,SAClB,KAEJ,GAAI,KAAK,SAAW,CAAC,KAAK,SAAU,CAChC,GAAI,GAAQ,EACZ,AAAI,KAAK,SACL,KACA,KAAK,KAAK,eAAgB,UAAY,CAClC,EAAE,GAAS,OAGd,KAAK,UACN,KACA,KAAK,KAAK,QAAS,UAAY,CAC3B,EAAE,GAAS,WAKnB,KAQR,MAAO,CACH,KAAK,QAAU,GACf,KAAK,SACL,KAAK,KAAK,QAOd,OAAO,EAAM,CACT,GAAM,GAAW,GAAU,CAMvB,GAJI,AAAc,KAAK,aAAnB,WAAiC,EAAO,OAAS,QACjD,KAAK,SAGL,AAAY,EAAO,OAAnB,QACA,YAAK,UACE,GAGX,KAAK,SAAS,IAGlB,GAAc,EAAM,KAAK,OAAO,YAAY,QAAQ,GAEhD,AAAa,KAAK,aAAlB,UAEA,MAAK,QAAU,GACf,KAAK,KAAK,gBACN,AAAW,KAAK,aAAhB,QACA,KAAK,QASjB,SAAU,CACN,GAAM,GAAQ,IAAM,CAChB,KAAK,MAAM,CAAC,CAAE,KAAM,YAExB,AAAI,AAAW,KAAK,aAAhB,OACA,IAKA,KAAK,KAAK,OAAQ,GAU1B,MAAM,EAAS,CACX,KAAK,SAAW,GAChB,GAAc,EAAS,GAAQ,CAC3B,KAAK,QAAQ,EAAM,IAAM,CACrB,KAAK,SAAW,GAChB,KAAK,KAAK,aAStB,KAAM,CACF,GAAI,GAAQ,KAAK,OAAS,GACpB,EAAS,KAAK,KAAK,OAAS,QAAU,OACxC,EAAO,GAEX,AAAI,AAAU,KAAK,KAAK,oBAApB,IACA,GAAM,KAAK,KAAK,gBAAkB,MAElC,CAAC,KAAK,gBAAkB,CAAC,EAAM,KAC/B,GAAM,IAAM,GAGZ,KAAK,KAAK,MACR,CAAY,IAAZ,SAAsB,OAAO,KAAK,KAAK,QAAU,KAC9C,AAAW,IAAX,QAAqB,OAAO,KAAK,KAAK,QAAU,KACrD,GAAO,IAAM,KAAK,KAAK,MAE3B,GAAM,GAAe,EAAQ,OAAO,GAC9B,EAAO,KAAK,KAAK,SAAS,QAAQ,OAAS,GACjD,MAAQ,GACJ,MACC,GAAO,IAAM,KAAK,KAAK,SAAW,IAAM,KAAK,KAAK,UACnD,EACA,KAAK,KAAK,KACT,GAAa,OAAS,IAAM,EAAe,MAQxD,aAAiB,EACjB,GAAM,IAAW,UAAY,CAIzB,MAAO,AAAQ,AAHH,IAAI,IAAiB,CAC7B,QAAS,KAEM,cAAZ,QAEX,gBAAkB,GAAQ,CAOtB,YAAY,EAAM,CACd,MAAM,GACN,GAAI,MAAO,WAAa,YAAa,CACjC,GAAM,GAAQ,AAAa,SAAS,WAAtB,SACV,EAAO,SAAS,KAEpB,AAAK,GACD,GAAO,EAAQ,MAAQ,MAE3B,KAAK,GACA,MAAO,WAAa,aACjB,EAAK,WAAa,SAAS,UAC3B,IAAS,EAAK,KACtB,KAAK,GAAK,EAAK,SAAW,EAK9B,GAAM,GAAc,GAAQ,EAAK,YACjC,KAAK,eAAiB,IAAW,CAAC,EAQtC,QAAQ,EAAO,GAAI,CACf,cAAO,OAAO,EAAM,CAAE,GAAI,KAAK,GAAI,GAAI,KAAK,IAAM,KAAK,MAChD,GAAI,GAAQ,KAAK,MAAO,GASnC,QAAQ,EAAM,EAAI,CACd,GAAM,GAAM,KAAK,QAAQ,CACrB,OAAQ,OACR,KAAM,IAEV,EAAI,GAAG,UAAW,GAClB,EAAI,GAAG,QAAS,GAAO,CACnB,KAAK,QAAQ,iBAAkB,KAQvC,QAAS,CACL,GAAM,GAAM,KAAK,UACjB,EAAI,GAAG,OAAQ,KAAK,OAAO,KAAK,OAChC,EAAI,GAAG,QAAS,GAAO,CACnB,KAAK,QAAQ,iBAAkB,KAEnC,KAAK,QAAU,IAGvB,eAAsB,EAAU,CAO5B,YAAY,EAAK,EAAM,CACnB,QACA,EAAsB,KAAM,GAC5B,KAAK,KAAO,EACZ,KAAK,OAAS,EAAK,QAAU,MAC7B,KAAK,IAAM,EACX,KAAK,MAAQ,AAAU,EAAK,QAAf,GACb,KAAK,KAAO,AAAc,EAAK,OAAnB,OAA0B,EAAK,KAAO,KAClD,KAAK,SAOT,QAAS,CACL,GAAM,GAAO,GAAK,KAAK,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjH,EAAK,QAAU,CAAC,CAAC,KAAK,KAAK,GAC3B,EAAK,QAAU,CAAC,CAAC,KAAK,KAAK,GAC3B,GAAM,GAAO,KAAK,IAAM,GAAI,IAAiB,GAC7C,GAAI,CACA,EAAI,KAAK,KAAK,OAAQ,KAAK,IAAK,KAAK,OACrC,GAAI,CACA,GAAI,KAAK,KAAK,aAAc,CACxB,EAAI,uBAAyB,EAAI,sBAAsB,IACvD,OAAS,KAAK,MAAK,KAAK,aACpB,AAAI,KAAK,KAAK,aAAa,eAAe,IACtC,EAAI,iBAAiB,EAAG,KAAK,KAAK,aAAa,WAKxD,EAAP,EACA,GAAI,AAAW,KAAK,SAAhB,OACA,GAAI,CACA,EAAI,iBAAiB,eAAgB,kCAElC,EAAP,EAEJ,GAAI,CACA,EAAI,iBAAiB,SAAU,aAE5B,EAAP,EAEA,AAAI,mBAAqB,IACrB,GAAI,gBAAkB,KAAK,KAAK,iBAEhC,KAAK,KAAK,gBACV,GAAI,QAAU,KAAK,KAAK,gBAE5B,EAAI,mBAAqB,IAAM,CAC3B,AAAI,AAAM,EAAI,aAAV,GAEJ,CAAI,AAAQ,EAAI,SAAZ,KAAsB,AAAS,EAAI,SAAb,KACtB,KAAK,SAKL,KAAK,aAAa,IAAM,CACpB,KAAK,QAAQ,MAAO,GAAI,QAAW,SAAW,EAAI,OAAS,IAC5D,KAGX,EAAI,KAAK,KAAK,YAEX,EAAP,CAII,KAAK,aAAa,IAAM,CACpB,KAAK,QAAQ,IACd,GACH,OAEJ,AAAI,MAAO,WAAa,aACpB,MAAK,MAAQ,EAAQ,gBACrB,EAAQ,SAAS,KAAK,OAAS,MAQvC,WAAY,CACR,KAAK,KAAK,WACV,KAAK,UAOT,OAAO,EAAM,CACT,KAAK,KAAK,OAAQ,GAClB,KAAK,YAOT,QAAQ,EAAK,CACT,KAAK,KAAK,QAAS,GACnB,KAAK,QAAQ,IAOjB,QAAQ,EAAW,CACf,GAAI,EAAgB,MAAO,MAAK,KAA5B,aAAmC,AAAS,KAAK,MAAd,MAIvC,IADA,KAAK,IAAI,mBAAqB,GAC1B,EACA,GAAI,CACA,KAAK,IAAI,cAEN,EAAP,EAEJ,AAAI,MAAO,WAAa,aACpB,MAAO,GAAQ,SAAS,KAAK,OAEjC,KAAK,IAAM,MAOf,QAAS,CACL,GAAM,GAAO,KAAK,IAAI,aACtB,AAAI,IAAS,MACT,KAAK,OAAO,GAQpB,OAAQ,CACJ,KAAK,YAGb,EAAQ,cAAgB,EACxB,EAAQ,SAAW,GAMnB,GAAI,MAAO,WAAa,aAEpB,GAAI,MAAO,cAAgB,WAEvB,YAAY,WAAY,YAEnB,MAAO,mBAAqB,WAAY,CAC7C,GAAM,GAAmB,cAAgB,GAAa,WAAa,SACnE,iBAAiB,EAAkB,GAAe,KAG1D,aAAyB,CACrB,OAAS,KAAK,GAAQ,SAClB,AAAI,EAAQ,SAAS,eAAe,IAChC,EAAQ,SAAS,GAAG,QAKhC,GAAM,IAAY,KACa,MAAO,UAAY,YAAc,MAAO,SAAQ,SAAY,WAE5E,GAAM,QAAQ,UAAU,KAAK,GAG7B,CAAC,EAAI,IAAiB,EAAa,EAAI,MAGhD,EAAY,EAAW,WAAa,EAAW,aAC/C,GAAwB,GACxB,GAAoB,cAGpB,GAAgB,MAAO,YAAc,aACvC,MAAO,WAAU,SAAY,UAC7B,UAAU,QAAQ,gBAAkB,cACxC,eAAiB,GAAU,CAOvB,YAAY,EAAM,CACd,MAAM,GACN,KAAK,eAAiB,CAAC,EAAK,eAO5B,OAAO,CACP,MAAO,YAOX,QAAS,CACL,GAAI,CAAC,KAAK,QAEN,OAEJ,GAAM,GAAM,KAAK,MACX,EAAY,KAAK,KAAK,UAEtB,EAAO,GACP,GACA,GAAK,KAAK,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBACpM,AAAI,KAAK,KAAK,cACV,GAAK,QAAU,KAAK,KAAK,cAE7B,GAAI,CACA,KAAK,GACD,IAAyB,CAAC,GACpB,EACI,GAAI,GAAU,EAAK,GACnB,GAAI,GAAU,GAClB,GAAI,GAAU,EAAK,EAAW,SAErC,EAAP,CACI,MAAO,MAAK,KAAK,QAAS,GAE9B,KAAK,GAAG,WAAa,KAAK,OAAO,YAAc,GAC/C,KAAK,oBAOT,mBAAoB,CAChB,KAAK,GAAG,OAAS,IAAM,CACnB,AAAI,KAAK,KAAK,WACV,KAAK,GAAG,QAAQ,QAEpB,KAAK,UAET,KAAK,GAAG,QAAU,KAAK,QAAQ,KAAK,MACpC,KAAK,GAAG,UAAY,GAAM,KAAK,OAAO,EAAG,MACzC,KAAK,GAAG,QAAU,GAAK,KAAK,QAAQ,kBAAmB,GAQ3D,MAAM,EAAS,CACX,KAAK,SAAW,GAGhB,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACrC,GAAM,GAAS,EAAQ,GACjB,EAAa,IAAM,EAAQ,OAAS,EAC1C,EAAa,EAAQ,KAAK,eAAgB,GAAQ,CAE9C,GAAM,GAAO,GAIb,GAAI,CACA,AAAI,IAEA,KAAK,GAAG,KAAK,SAGd,EAAP,EAEA,AAAI,GAGA,GAAS,IAAM,CACX,KAAK,SAAW,GAChB,KAAK,KAAK,UACX,KAAK,iBAUxB,SAAU,CACN,AAAI,MAAO,MAAK,IAAO,aACnB,MAAK,GAAG,QACR,KAAK,GAAK,MAQlB,KAAM,CACF,GAAI,GAAQ,KAAK,OAAS,GACpB,EAAS,KAAK,KAAK,OAAS,MAAQ,KACtC,EAAO,GAEX,AAAI,KAAK,KAAK,MACR,CAAU,IAAV,OAAoB,OAAO,KAAK,KAAK,QAAU,KAC5C,AAAS,IAAT,MAAmB,OAAO,KAAK,KAAK,QAAU,KACnD,GAAO,IAAM,KAAK,KAAK,MAGvB,KAAK,KAAK,mBACV,GAAM,KAAK,KAAK,gBAAkB,MAGjC,KAAK,gBACN,GAAM,IAAM,GAEhB,GAAM,GAAe,EAAQ,OAAO,GAC9B,EAAO,KAAK,KAAK,SAAS,QAAQ,OAAS,GACjD,MAAQ,GACJ,MACC,GAAO,IAAM,KAAK,KAAK,SAAW,IAAM,KAAK,KAAK,UACnD,EACA,KAAK,KAAK,KACT,GAAa,OAAS,IAAM,EAAe,IAQpD,OAAQ,CACJ,MAAQ,CAAC,CAAC,GACN,CAAE,iBAAkB,IAAa,KAAK,OAAS,EAAG,UAAU,QAIlE,GAAa,CACf,UAAW,EACX,QAAS,IAGb,eAAqB,EAAU,CAQ3B,YAAY,EAAK,EAAO,GAAI,CACxB,QACA,AAAI,GAAO,AAAa,MAAO,IAApB,UACP,GAAO,EACP,EAAM,MAEV,AAAI,EACA,GAAM,EAAS,GACf,EAAK,SAAW,EAAI,KACpB,EAAK,OAAS,EAAI,WAAa,SAAW,EAAI,WAAa,MAC3D,EAAK,KAAO,EAAI,KACZ,EAAI,OACJ,GAAK,MAAQ,EAAI,QAEhB,EAAK,MACV,GAAK,SAAW,EAAS,EAAK,MAAM,MAExC,EAAsB,KAAM,GAC5B,KAAK,OACD,AAAQ,EAAK,QAAb,KACM,EAAK,OACL,MAAO,WAAa,aAAe,AAAa,SAAS,WAAtB,SACzC,EAAK,UAAY,CAAC,EAAK,MAEvB,GAAK,KAAO,KAAK,OAAS,MAAQ,MAEtC,KAAK,SACD,EAAK,UACA,OAAO,WAAa,YAAc,SAAS,SAAW,aAC/D,KAAK,KACD,EAAK,MACA,OAAO,WAAa,aAAe,SAAS,KACvC,SAAS,KACT,KAAK,OACD,MACA,MAClB,KAAK,WAAa,EAAK,YAAc,CAAC,UAAW,aACjD,KAAK,WAAa,GAClB,KAAK,YAAc,GACnB,KAAK,cAAgB,EACrB,KAAK,KAAO,OAAO,OAAO,CACtB,KAAM,aACN,MAAO,GACP,gBAAiB,GACjB,QAAS,GACT,eAAgB,IAChB,gBAAiB,GACjB,mBAAoB,GACpB,kBAAmB,CACf,UAAW,MAEf,iBAAkB,GAClB,oBAAqB,IACtB,GACH,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,QAAQ,MAAO,IAAM,IACjD,MAAO,MAAK,KAAK,OAAU,UAC3B,MAAK,KAAK,MAAQ,EAAQ,OAAO,KAAK,KAAK,QAG/C,KAAK,GAAK,KACV,KAAK,SAAW,KAChB,KAAK,aAAe,KACpB,KAAK,YAAc,KAEnB,KAAK,iBAAmB,KACpB,MAAO,mBAAqB,YACxB,MAAK,KAAK,qBAIV,iBAAiB,eAAgB,IAAM,CACnC,AAAI,KAAK,WAEL,MAAK,UAAU,qBACf,KAAK,UAAU,UAEpB,IAEH,KAAK,WAAa,aAClB,MAAK,qBAAuB,IAAM,CAC9B,KAAK,QAAQ,oBAEjB,iBAAiB,UAAW,KAAK,qBAAsB,MAG/D,KAAK,OAST,gBAAgB,EAAM,CAClB,GAAM,GAAQ,GAAM,KAAK,KAAK,OAE9B,EAAM,IAAM,EAEZ,EAAM,UAAY,EAEd,KAAK,IACL,GAAM,IAAM,KAAK,IACrB,GAAM,GAAO,OAAO,OAAO,GAAI,KAAK,KAAK,iBAAiB,GAAO,KAAK,KAAM,CACxE,QACA,OAAQ,KACR,SAAU,KAAK,SACf,OAAQ,KAAK,OACb,KAAM,KAAK,OAEf,MAAO,IAAI,IAAW,GAAM,GAOhC,MAAO,CACH,GAAI,GACJ,GAAI,KAAK,KAAK,iBACV,EAAO,uBACP,KAAK,WAAW,QAAQ,eAAiB,GACzC,EAAY,oBAEP,AAAM,KAAK,WAAW,SAAtB,EAA8B,CAEnC,KAAK,aAAa,IAAM,CACpB,KAAK,aAAa,QAAS,4BAC5B,GACH,WAGA,GAAY,KAAK,WAAW,GAEhC,KAAK,WAAa,UAElB,GAAI,CACA,EAAY,KAAK,gBAAgB,SAE9B,EAAP,CACI,KAAK,WAAW,QAChB,KAAK,OACL,OAEJ,EAAU,OACV,KAAK,aAAa,GAOtB,aAAa,EAAW,CACpB,AAAI,KAAK,WACL,KAAK,UAAU,qBAGnB,KAAK,UAAY,EAEjB,EACK,GAAG,QAAS,KAAK,QAAQ,KAAK,OAC9B,GAAG,SAAU,KAAK,SAAS,KAAK,OAChC,GAAG,QAAS,KAAK,QAAQ,KAAK,OAC9B,GAAG,QAAS,IAAM,CACnB,KAAK,QAAQ,qBASrB,MAAM,EAAM,CACR,GAAI,GAAY,KAAK,gBAAgB,GACjC,EAAS,GACb,EAAO,sBAAwB,GAC/B,GAAM,GAAkB,IAAM,CAC1B,AAAI,GAEJ,GAAU,KAAK,CAAC,CAAE,KAAM,OAAQ,KAAM,WACtC,EAAU,KAAK,SAAU,GAAO,CAC5B,GAAI,GAEJ,GAAI,AAAW,EAAI,OAAf,QAAuB,AAAY,EAAI,OAAhB,QAAsB,CAG7C,GAFA,KAAK,UAAY,GACjB,KAAK,aAAa,YAAa,GAC3B,CAAC,EACD,OACJ,EAAO,sBAAwB,AAAgB,EAAU,OAA1B,YAC/B,KAAK,UAAU,MAAM,IAAM,CACvB,AAAI,GAEA,AAAa,KAAK,aAAlB,UAEJ,KACA,KAAK,aAAa,GAClB,EAAU,KAAK,CAAC,CAAE,KAAM,aACxB,KAAK,aAAa,UAAW,GAC7B,EAAY,KACZ,KAAK,UAAY,GACjB,KAAK,eAGR,CACD,GAAM,GAAM,GAAI,OAAM,eAEtB,EAAI,UAAY,EAAU,KAC1B,KAAK,aAAa,eAAgB,QAI9C,YAA2B,CACvB,AAAI,GAGJ,GAAS,GACT,IACA,EAAU,QACV,EAAY,MAGhB,GAAM,GAAU,GAAO,CACnB,GAAM,GAAQ,GAAI,OAAM,gBAAkB,GAE1C,EAAM,UAAY,EAAU,KAC5B,IACA,KAAK,aAAa,eAAgB,IAEtC,YAA4B,CACxB,EAAQ,oBAGZ,YAAmB,CACf,EAAQ,iBAGZ,WAAmB,EAAI,CACnB,AAAI,GAAa,EAAG,OAAS,EAAU,MACnC,IAIR,GAAM,GAAU,IAAM,CAClB,EAAU,eAAe,OAAQ,GACjC,EAAU,eAAe,QAAS,GAClC,EAAU,eAAe,QAAS,GAClC,KAAK,IAAI,QAAS,GAClB,KAAK,IAAI,YAAa,IAE1B,EAAU,KAAK,OAAQ,GACvB,EAAU,KAAK,QAAS,GACxB,EAAU,KAAK,QAAS,GACxB,KAAK,KAAK,QAAS,GACnB,KAAK,KAAK,YAAa,GACvB,EAAU,OAOd,QAAS,CAOL,GANA,KAAK,WAAa,OAClB,EAAO,sBAAwB,AAAgB,KAAK,UAAU,OAA/B,YAC/B,KAAK,aAAa,QAClB,KAAK,QAGD,AAAW,KAAK,aAAhB,QACA,KAAK,KAAK,SACV,KAAK,UAAU,MAAO,CACtB,GAAI,GAAI,EACF,EAAI,KAAK,SAAS,OACxB,KAAO,EAAI,EAAG,IACV,KAAK,MAAM,KAAK,SAAS,KASrC,SAAS,EAAQ,CACb,GAAI,AAAc,KAAK,aAAnB,WACA,AAAW,KAAK,aAAhB,QACA,AAAc,KAAK,aAAnB,UAIA,OAHA,KAAK,aAAa,SAAU,GAE5B,KAAK,aAAa,aACV,EAAO,UACN,OACD,KAAK,YAAY,KAAK,MAAM,EAAO,OACnC,UACC,OACD,KAAK,mBACL,KAAK,WAAW,QAChB,KAAK,aAAa,QAClB,KAAK,aAAa,QAClB,UACC,QACD,GAAM,GAAM,GAAI,OAAM,gBAEtB,EAAI,KAAO,EAAO,KAClB,KAAK,QAAQ,GACb,UACC,UACD,KAAK,aAAa,OAAQ,EAAO,MACjC,KAAK,aAAa,UAAW,EAAO,MACpC,OAUhB,YAAY,EAAM,CASd,AARA,KAAK,aAAa,YAAa,GAC/B,KAAK,GAAK,EAAK,IACf,KAAK,UAAU,MAAM,IAAM,EAAK,IAChC,KAAK,SAAW,KAAK,eAAe,EAAK,UACzC,KAAK,aAAe,EAAK,aACzB,KAAK,YAAc,EAAK,YACxB,KAAK,SAED,AAAa,KAAK,aAAlB,UAEJ,KAAK,mBAOT,kBAAmB,CACf,KAAK,eAAe,KAAK,kBACzB,KAAK,iBAAmB,KAAK,aAAa,IAAM,CAC5C,KAAK,QAAQ,iBACd,KAAK,aAAe,KAAK,aACxB,KAAK,KAAK,WACV,KAAK,iBAAiB,QAQ9B,SAAU,CACN,KAAK,YAAY,OAAO,EAAG,KAAK,eAIhC,KAAK,cAAgB,EACrB,AAAI,AAAM,KAAK,YAAY,SAAvB,EACA,KAAK,aAAa,SAGlB,KAAK,QAQb,OAAQ,CACJ,AAAI,AAAa,KAAK,aAAlB,UACA,KAAK,UAAU,UACf,CAAC,KAAK,WACN,KAAK,YAAY,QACjB,MAAK,UAAU,KAAK,KAAK,aAGzB,KAAK,cAAgB,KAAK,YAAY,OACtC,KAAK,aAAa,UAY1B,MAAM,EAAK,EAAS,EAAI,CACpB,YAAK,WAAW,UAAW,EAAK,EAAS,GAClC,KAEX,KAAK,EAAK,EAAS,EAAI,CACnB,YAAK,WAAW,UAAW,EAAK,EAAS,GAClC,KAWX,WAAW,EAAM,EAAM,EAAS,EAAI,CAShC,GARI,AAAe,MAAO,IAAtB,YACA,GAAK,EACL,EAAO,QAEP,AAAe,MAAO,IAAtB,YACA,GAAK,EACL,EAAU,MAEV,AAAc,KAAK,aAAnB,WAAiC,AAAa,KAAK,aAAlB,SACjC,OAEJ,EAAU,GAAW,GACrB,EAAQ,SAAW,AAAU,EAAQ,WAAlB,GACnB,GAAM,GAAS,CACX,KAAM,EACN,KAAM,EACN,QAAS,GAEb,KAAK,aAAa,eAAgB,GAClC,KAAK,YAAY,KAAK,GAClB,GACA,KAAK,KAAK,QAAS,GACvB,KAAK,QAOT,OAAQ,CACJ,GAAM,GAAQ,IAAM,CAChB,KAAK,QAAQ,gBACb,KAAK,UAAU,SAEb,EAAkB,IAAM,CAC1B,KAAK,IAAI,UAAW,GACpB,KAAK,IAAI,eAAgB,GACzB,KAEE,EAAiB,IAAM,CAEzB,KAAK,KAAK,UAAW,GACrB,KAAK,KAAK,eAAgB,IAE9B,MAAI,CAAc,KAAK,aAAnB,WAAiC,AAAW,KAAK,aAAhB,SACjC,MAAK,WAAa,UAClB,AAAI,KAAK,YAAY,OACjB,KAAK,KAAK,QAAS,IAAM,CACrB,AAAI,KAAK,UACL,IAGA,MAIP,AAAI,KAAK,UACV,IAGA,KAGD,KAOX,QAAQ,EAAK,CACT,EAAO,sBAAwB,GAC/B,KAAK,aAAa,QAAS,GAC3B,KAAK,QAAQ,kBAAmB,GAOpC,QAAQ,EAAQ,EAAM,CAClB,AAAI,CAAc,KAAK,aAAnB,WACA,AAAW,KAAK,aAAhB,QACA,AAAc,KAAK,aAAnB,YAEA,MAAK,eAAe,KAAK,kBAEzB,KAAK,UAAU,mBAAmB,SAElC,KAAK,UAAU,QAEf,KAAK,UAAU,qBACX,MAAO,sBAAwB,YAC/B,oBAAoB,UAAW,KAAK,qBAAsB,IAG9D,KAAK,WAAa,SAElB,KAAK,GAAK,KAEV,KAAK,aAAa,QAAS,EAAQ,GAGnC,KAAK,YAAc,GACnB,KAAK,cAAgB,GAU7B,eAAe,EAAU,CACrB,GAAM,GAAmB,GACrB,EAAI,EACF,EAAI,EAAS,OACnB,KAAO,EAAI,EAAG,IACV,AAAI,CAAC,KAAK,WAAW,QAAQ,EAAS,KAClC,EAAiB,KAAK,EAAS,IAEvC,MAAO,KAGf,EAAO,SAAW,EAClB,YAAe,EAAK,CAChB,GAAM,GAAI,GACV,OAAS,KAAK,GACV,AAAI,EAAI,eAAe,IACnB,GAAE,GAAK,EAAI,IAGnB,MAAO,GCryCX,GAAM,IAAwB,MAAO,cAAgB,WAC/C,GAAS,AAAC,GACL,MAAO,aAAY,QAAW,WAC/B,YAAY,OAAO,GACnB,EAAI,iBAAkB,aAE1B,GAAW,OAAO,UAAU,SAC5B,GAAiB,MAAO,OAAS,YAClC,MAAO,OAAS,aACb,GAAS,KAAK,QAAU,2BAC1B,GAAiB,MAAO,OAAS,YAClC,MAAO,OAAS,aACb,GAAS,KAAK,QAAU,2BAMhC,YAAkB,EAAK,CACnB,MAAS,KAA0B,aAAe,cAAe,GAAO,KACnE,IAAkB,YAAe,OACjC,IAAkB,YAAe,MAE1C,WAAmB,EAAK,EAAQ,CAC5B,GAAI,CAAC,GAAO,MAAO,IAAQ,SACvB,MAAO,GAEX,GAAI,MAAM,QAAQ,GAAM,CACpB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,EAAI,EAAG,IACnC,GAAI,EAAU,EAAI,IACd,MAAO,GAGf,MAAO,GAEX,GAAI,GAAS,GACT,MAAO,GAEX,GAAI,EAAI,QACJ,MAAO,GAAI,QAAW,YACtB,UAAU,SAAW,EACrB,MAAO,GAAU,EAAI,SAAU,IAEnC,OAAW,KAAO,GACd,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,IAAQ,EAAU,EAAI,IAChE,MAAO,GAGf,MAAO,GAUX,YAA2B,EAAQ,CAC/B,GAAM,GAAU,GACV,EAAa,EAAO,KACpB,EAAO,EACb,SAAK,KAAO,GAAmB,EAAY,GAC3C,EAAK,YAAc,EAAQ,OACpB,CAAE,OAAQ,EAAM,QAAS,GAEpC,YAA4B,EAAM,EAAS,CACvC,GAAI,CAAC,EACD,MAAO,GACX,GAAI,GAAS,GAAO,CAChB,GAAM,GAAc,CAAE,aAAc,GAAM,IAAK,EAAQ,QACvD,SAAQ,KAAK,GACN,UAEF,MAAM,QAAQ,GAAO,CAC1B,GAAM,GAAU,GAAI,OAAM,EAAK,QAC/B,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,EAAQ,GAAK,GAAmB,EAAK,GAAI,GAE7C,MAAO,WAEF,MAAO,IAAS,UAAY,CAAE,aAAgB,OAAO,CAC1D,GAAM,GAAU,GAChB,OAAW,KAAO,GACd,AAAI,OAAO,UAAU,eAAe,KAAK,EAAM,IAC3C,GAAQ,GAAO,GAAmB,EAAK,GAAM,IAGrD,MAAO,GAEX,MAAO,GAUX,YAA2B,EAAQ,EAAS,CACxC,SAAO,KAAO,GAAmB,EAAO,KAAM,GAC9C,EAAO,YAAc,OACd,EAEX,YAA4B,EAAM,EAAS,CACvC,GAAI,CAAC,EACD,MAAO,GACX,GAAI,GAAQ,EAAK,aACb,MAAO,GAAQ,EAAK,KAEnB,GAAI,MAAM,QAAQ,GACnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,EAAK,GAAK,GAAmB,EAAK,GAAI,WAGrC,MAAO,IAAS,SACrB,OAAW,KAAO,GACd,AAAI,OAAO,UAAU,eAAe,KAAK,EAAM,IAC3C,GAAK,GAAO,GAAmB,EAAK,GAAM,IAItD,MAAO,GAQX,GAAM,IAAW,EACb,EACJ,AAAC,UAAU,EAAY,CACnB,EAAW,EAAW,QAAa,GAAK,UACxC,EAAW,EAAW,WAAgB,GAAK,aAC3C,EAAW,EAAW,MAAW,GAAK,QACtC,EAAW,EAAW,IAAS,GAAK,MACpC,EAAW,EAAW,cAAmB,GAAK,gBAC9C,EAAW,EAAW,aAAkB,GAAK,eAC7C,EAAW,EAAW,WAAgB,GAAK,eAC5C,GAAe,GAAa,KAI/B,YAAc,CAOV,OAAO,EAAK,CACR,MAAI,GAAI,OAAS,EAAW,OAAS,EAAI,OAAS,EAAW,MACrD,EAAU,GACV,GAAI,KACA,EAAI,OAAS,EAAW,MAClB,EAAW,aACX,EAAW,WACd,KAAK,eAAe,IAG5B,CAAC,KAAK,eAAe,IAKhC,eAAe,EAAK,CAEhB,GAAI,GAAM,GAAK,EAAI,KAEnB,MAAI,GAAI,OAAS,EAAW,cACxB,EAAI,OAAS,EAAW,aACxB,IAAO,EAAI,YAAc,KAIzB,EAAI,KAAO,AAAQ,EAAI,MAAZ,KACX,IAAO,EAAI,IAAM,KAGjB,AAAQ,EAAI,IAAZ,MACA,IAAO,EAAI,IAGX,AAAQ,EAAI,MAAZ,MACA,IAAO,KAAK,UAAU,EAAI,OAEvB,EAOX,eAAe,EAAK,CAChB,GAAM,GAAiB,GAAkB,GACnC,EAAO,KAAK,eAAe,EAAe,QAC1C,EAAU,EAAe,QAC/B,SAAQ,QAAQ,GACT,IAQf,eAAsB,EAAU,CAC5B,aAAc,CACV,QAOJ,IAAI,EAAK,CACL,GAAI,GACJ,GAAI,MAAO,IAAQ,SACf,EAAS,KAAK,aAAa,GAC3B,AAAI,EAAO,OAAS,EAAW,cAC3B,EAAO,OAAS,EAAW,WAE3B,MAAK,cAAgB,GAAI,IAAoB,GAEzC,EAAO,cAAgB,GACvB,MAAM,aAAa,UAAW,IAKlC,MAAM,aAAa,UAAW,WAG7B,GAAS,IAAQ,EAAI,OAE1B,GAAK,KAAK,cAIN,EAAS,KAAK,cAAc,eAAe,GACvC,GAEA,MAAK,cAAgB,KACrB,MAAM,aAAa,UAAW,QAPlC,MAAM,IAAI,OAAM,wDAYpB,MAAM,IAAI,OAAM,iBAAmB,GAS3C,aAAa,EAAK,CACd,GAAI,GAAI,EAEF,EAAI,CACN,KAAM,OAAO,EAAI,OAAO,KAE5B,GAAI,EAAW,EAAE,QAAU,OACvB,KAAM,IAAI,OAAM,uBAAyB,EAAE,MAG/C,GAAI,EAAE,OAAS,EAAW,cACtB,EAAE,OAAS,EAAW,WAAY,CAClC,GAAM,GAAQ,EAAI,EAClB,KAAO,EAAI,OAAO,EAAE,KAAO,KAAO,GAAK,EAAI,QAAQ,CACnD,GAAM,GAAM,EAAI,UAAU,EAAO,GACjC,GAAI,GAAO,OAAO,IAAQ,EAAI,OAAO,KAAO,IACxC,KAAM,IAAI,OAAM,uBAEpB,EAAE,YAAc,OAAO,GAG3B,GAAI,AAAQ,EAAI,OAAO,EAAI,KAAvB,IAA2B,CAC3B,GAAM,GAAQ,EAAI,EAClB,KAAO,EAAE,GAED,EADM,EAAI,OAAO,KACjB,KAEA,IAAM,EAAI,SAAd,CAGJ,EAAE,IAAM,EAAI,UAAU,EAAO,OAG7B,GAAE,IAAM,IAGZ,GAAM,GAAO,EAAI,OAAO,EAAI,GAC5B,GAAI,AAAO,IAAP,IAAe,OAAO,IAAS,EAAM,CACrC,GAAM,GAAQ,EAAI,EAClB,KAAO,EAAE,GAAG,CACR,GAAM,GAAI,EAAI,OAAO,GACrB,GAAI,AAAQ,GAAR,MAAa,OAAO,IAAM,EAAG,CAC7B,EAAE,EACF,MAEJ,GAAI,IAAM,EAAI,OACV,MAER,EAAE,GAAK,OAAO,EAAI,UAAU,EAAO,EAAI,IAG3C,GAAI,EAAI,OAAO,EAAE,GAAI,CACjB,GAAM,GAAU,GAAS,EAAI,OAAO,IACpC,GAAI,EAAQ,eAAe,EAAE,KAAM,GAC/B,EAAE,KAAO,MAGT,MAAM,IAAI,OAAM,mBAGxB,MAAO,SAEJ,gBAAe,EAAM,EAAS,CACjC,OAAQ,OACC,GAAW,QACZ,MAAO,OAAO,IAAY,aACzB,GAAW,WACZ,MAAO,KAAY,WAClB,GAAW,cACZ,MAAO,OAAO,IAAY,UAAY,MAAO,IAAY,aACxD,GAAW,UACX,GAAW,aACZ,MAAO,OAAM,QAAQ,IAAY,EAAQ,OAAS,MACjD,GAAW,QACX,GAAW,WACZ,MAAO,OAAM,QAAQ,IAMjC,SAAU,CACN,AAAI,KAAK,eACL,KAAK,cAAc,2BAI/B,YAAkB,EAAK,CACnB,GAAI,CACA,MAAO,MAAK,MAAM,SAEf,EAAP,CACI,MAAO,IAWf,YAA0B,CACtB,YAAY,EAAQ,CAChB,KAAK,OAAS,EACd,KAAK,QAAU,GACf,KAAK,UAAY,EAUrB,eAAe,EAAS,CAEpB,GADA,KAAK,QAAQ,KAAK,GACd,KAAK,QAAQ,SAAW,KAAK,UAAU,YAAa,CAEpD,GAAM,GAAS,GAAkB,KAAK,UAAW,KAAK,SACtD,YAAK,yBACE,EAEX,MAAO,MAKX,wBAAyB,CACrB,KAAK,UAAY,KACjB,KAAK,QAAU,KAInB,GAAsB,OAAO,OAAO,CACpC,UAAW,KACX,SAAU,MACN,aAAc,CAAE,MAAO,IAC3B,QAAS,GACT,QAAS,IC9Yb,GAAI,IAAS,EAcb,WAAiB,EAAM,CACrB,EAAO,GAAQ,GACf,KAAK,GAAK,EAAK,KAAO,IACtB,KAAK,IAAM,EAAK,KAAO,IACvB,KAAK,OAAS,EAAK,QAAU,EAC7B,KAAK,OAAS,EAAK,OAAS,GAAK,EAAK,QAAU,EAAI,EAAK,OAAS,EAClE,KAAK,SAAW,EAUlB,EAAQ,UAAU,SAAW,UAAU,CACrC,GAAI,GAAK,KAAK,GAAK,KAAK,IAAI,KAAK,OAAQ,KAAK,YAC9C,GAAI,KAAK,OAAQ,CACf,GAAI,GAAQ,KAAK,SACb,EAAY,KAAK,MAAM,EAAO,KAAK,OAAS,GAChD,EAAM,MAAK,MAAM,EAAO,IAAM,IAAM,EAAK,EAAK,EAAY,EAAK,EAEjE,MAAO,MAAK,IAAI,EAAI,KAAK,KAAO,GASlC,EAAQ,UAAU,MAAQ,UAAU,CAClC,KAAK,SAAW,GASlB,EAAQ,UAAU,OAAS,SAAS,EAAI,CACtC,KAAK,GAAK,GASZ,EAAQ,UAAU,OAAS,SAAS,EAAI,CACtC,KAAK,IAAM,GASb,EAAQ,UAAU,UAAY,SAAS,EAAO,CAC5C,KAAK,OAAS,GC7DhB,YAAa,EAAK,EAAO,GAAI,EAAK,CAC9B,GAAI,GAAM,EAEV,EAAM,GAAQ,MAAO,WAAa,aAAe,SAC7C,AAAQ,GAAR,MACA,GAAM,EAAI,SAAW,KAAO,EAAI,MAEhC,MAAO,IAAQ,UACX,CAAQ,EAAI,OAAO,KAAnB,KACA,CAAI,AAAQ,EAAI,OAAO,KAAnB,IACA,EAAM,EAAI,SAAW,EAGrB,EAAM,EAAI,KAAO,GAGpB,sBAAsB,KAAK,IAC5B,CAAI,AAAgB,MAAO,IAAvB,YACA,EAAM,EAAI,SAAW,KAAO,EAG5B,EAAM,WAAa,GAI3B,EAAM,EAAS,IAGd,EAAI,MACL,CAAI,cAAc,KAAK,EAAI,UACvB,EAAI,KAAO,KAEN,eAAe,KAAK,EAAI,WAC7B,GAAI,KAAO,QAGnB,EAAI,KAAO,EAAI,MAAQ,IAEvB,GAAM,GAAO,AADA,EAAI,KAAK,QAAQ,OAAS,GACnB,IAAM,EAAI,KAAO,IAAM,EAAI,KAE/C,SAAI,GAAK,EAAI,SAAW,MAAQ,EAAO,IAAM,EAAI,KAAO,EAExD,EAAI,KACA,EAAI,SACA,MACA,EACC,IAAO,EAAI,OAAS,EAAI,KAAO,GAAK,IAAM,EAAI,MAChD,EAGX,WAAY,EAAK,EAAI,EAAI,CACrB,SAAI,GAAG,EAAI,GACJ,UAAsB,CACzB,EAAI,IAAI,EAAI,IAQpB,GAAM,IAAkB,OAAO,OAAO,CAClC,QAAS,EACT,cAAe,EACf,WAAY,EACZ,cAAe,EAEf,YAAa,EACb,eAAgB,IAEpB,gBAAqB,EAAU,CAM3B,YAAY,EAAI,EAAK,EAAM,CACvB,QACA,KAAK,UAAY,GACjB,KAAK,aAAe,GACpB,KAAK,cAAgB,GACrB,KAAK,WAAa,GAClB,KAAK,IAAM,EACX,KAAK,KAAO,GACZ,KAAK,MAAQ,GACb,KAAK,GAAK,EACV,KAAK,IAAM,EACP,GAAQ,EAAK,MACb,MAAK,KAAO,EAAK,MAEjB,KAAK,GAAG,cACR,KAAK,OAOb,WAAY,CACR,GAAI,KAAK,KACL,OACJ,GAAM,GAAK,KAAK,GAChB,KAAK,KAAO,CACR,EAAG,EAAI,OAAQ,KAAK,OAAO,KAAK,OAChC,EAAG,EAAI,SAAU,KAAK,SAAS,KAAK,OACpC,EAAG,EAAI,QAAS,KAAK,QAAQ,KAAK,OAClC,EAAG,EAAI,QAAS,KAAK,QAAQ,KAAK,WAMtC,SAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAOlB,SAAU,CACN,MAAI,MAAK,UACE,KACX,MAAK,YACA,KAAK,GAAG,eACT,KAAK,GAAG,OACR,AAAW,KAAK,GAAG,cAAnB,QACA,KAAK,SACF,MAKX,MAAO,CACH,MAAO,MAAK,UAQhB,QAAQ,EAAM,CACV,SAAK,QAAQ,WACb,KAAK,KAAK,MAAM,KAAM,GACf,KASX,KAAK,KAAO,EAAM,CACd,GAAI,GAAgB,eAAe,GAC/B,KAAM,IAAI,OAAM,IAAM,EAAK,8BAE/B,EAAK,QAAQ,GACb,GAAM,GAAS,CACX,KAAM,EAAW,MACjB,KAAM,GAKV,GAHA,EAAO,QAAU,GACjB,EAAO,QAAQ,SAAW,KAAK,MAAM,WAAa,GAE9C,AAAe,MAAO,GAAK,EAAK,OAAS,IAAzC,WAA6C,CAC7C,GAAM,GAAK,KAAK,MACV,EAAM,EAAK,MACjB,KAAK,qBAAqB,EAAI,GAC9B,EAAO,GAAK,EAEhB,GAAM,GAAsB,KAAK,GAAG,QAChC,KAAK,GAAG,OAAO,WACf,KAAK,GAAG,OAAO,UAAU,SAE7B,MAAI,AADkB,MAAK,MAAM,UAAa,EAAC,GAAuB,CAAC,KAAK,YAEvE,CAAI,KAAK,UACV,KAAK,OAAO,GAGZ,KAAK,WAAW,KAAK,IAEzB,KAAK,MAAQ,GACN,KAKX,qBAAqB,EAAI,EAAK,CAC1B,GAAM,GAAU,KAAK,MAAM,QAC3B,GAAI,IAAY,OAAW,CACvB,KAAK,KAAK,GAAM,EAChB,OAGJ,GAAM,GAAQ,KAAK,GAAG,aAAa,IAAM,CACrC,MAAO,MAAK,KAAK,GACjB,OAAS,GAAI,EAAG,EAAI,KAAK,WAAW,OAAQ,IACxC,AAAI,KAAK,WAAW,GAAG,KAAO,GAC1B,KAAK,WAAW,OAAO,EAAG,GAGlC,EAAI,KAAK,KAAM,GAAI,OAAM,6BAC1B,GACH,KAAK,KAAK,GAAM,IAAI,IAAS,CAEzB,KAAK,GAAG,eAAe,GACvB,EAAI,MAAM,KAAM,CAAC,KAAM,GAAG,KASlC,OAAO,EAAQ,CACX,EAAO,IAAM,KAAK,IAClB,KAAK,GAAG,QAAQ,GAOpB,QAAS,CACL,AAAI,MAAO,MAAK,MAAQ,WACpB,KAAK,KAAK,AAAC,GAAS,CAChB,KAAK,OAAO,CAAE,KAAM,EAAW,QAAS,WAI5C,KAAK,OAAO,CAAE,KAAM,EAAW,QAAS,KAAM,KAAK,OAS3D,QAAQ,EAAK,CACT,AAAK,KAAK,WACN,KAAK,aAAa,gBAAiB,GAS3C,QAAQ,EAAQ,CACZ,KAAK,UAAY,GACjB,KAAK,aAAe,GACpB,MAAO,MAAK,GACZ,KAAK,aAAa,aAAc,GAQpC,SAAS,EAAQ,CAEb,GADsB,EAAO,MAAQ,KAAK,IAG1C,OAAQ,EAAO,UACN,GAAW,QACZ,GAAI,EAAO,MAAQ,EAAO,KAAK,IAAK,CAChC,GAAM,GAAK,EAAO,KAAK,IACvB,KAAK,UAAU,OAGf,MAAK,aAAa,gBAAiB,GAAI,OAAM,8LAEjD,UACC,GAAW,MACZ,KAAK,QAAQ,GACb,UACC,GAAW,aACZ,KAAK,QAAQ,GACb,UACC,GAAW,IACZ,KAAK,MAAM,GACX,UACC,GAAW,WACZ,KAAK,MAAM,GACX,UACC,GAAW,WACZ,KAAK,eACL,UACC,GAAW,cACZ,KAAK,UACL,GAAM,GAAM,GAAI,OAAM,EAAO,KAAK,SAElC,EAAI,KAAO,EAAO,KAAK,KACvB,KAAK,aAAa,gBAAiB,GACnC,OASZ,QAAQ,EAAQ,CACZ,GAAM,GAAO,EAAO,MAAQ,GAC5B,AAAI,AAAQ,EAAO,IAAf,MACA,EAAK,KAAK,KAAK,IAAI,EAAO,KAE9B,AAAI,KAAK,UACL,KAAK,UAAU,GAGf,KAAK,cAAc,KAAK,OAAO,OAAO,IAG9C,UAAU,EAAM,CACZ,GAAI,KAAK,eAAiB,KAAK,cAAc,OAAQ,CACjD,GAAM,GAAY,KAAK,cAAc,QACrC,OAAW,KAAY,GACnB,EAAS,MAAM,KAAM,GAG7B,MAAM,KAAK,MAAM,KAAM,GAO3B,IAAI,EAAI,CACJ,GAAM,GAAO,KACT,EAAO,GACX,MAAO,aAAa,EAAM,CAEtB,AAAI,GAEJ,GAAO,GACP,EAAK,OAAO,CACR,KAAM,EAAW,IACjB,GAAI,EACJ,KAAM,MAUlB,MAAM,EAAQ,CACV,GAAM,GAAM,KAAK,KAAK,EAAO,IAC7B,AAAI,AAAe,MAAO,IAAtB,YACA,GAAI,MAAM,KAAM,EAAO,MACvB,MAAO,MAAK,KAAK,EAAO,KAQhC,UAAU,EAAI,CACV,KAAK,GAAK,EACV,KAAK,UAAY,GACjB,KAAK,aAAe,GACpB,KAAK,eACL,KAAK,aAAa,WAOtB,cAAe,CACX,KAAK,cAAc,QAAQ,AAAC,GAAS,KAAK,UAAU,IACpD,KAAK,cAAgB,GACrB,KAAK,WAAW,QAAQ,AAAC,GAAW,KAAK,OAAO,IAChD,KAAK,WAAa,GAOtB,cAAe,CACX,KAAK,UACL,KAAK,QAAQ,wBASjB,SAAU,CACN,AAAI,KAAK,MAEL,MAAK,KAAK,QAAQ,AAAC,GAAe,KAClC,KAAK,KAAO,QAEhB,KAAK,GAAG,SAAY,MAQxB,YAAa,CACT,MAAI,MAAK,WACL,KAAK,OAAO,CAAE,KAAM,EAAW,aAGnC,KAAK,UACD,KAAK,WAEL,KAAK,QAAQ,wBAEV,KAQX,OAAQ,CACJ,MAAO,MAAK,aAShB,SAAS,EAAU,CACf,YAAK,MAAM,SAAW,EACf,QASP,WAAW,CACX,YAAK,MAAM,SAAW,GACf,KAiBX,QAAQ,EAAS,CACb,YAAK,MAAM,QAAU,EACd,KASX,MAAM,EAAU,CACZ,YAAK,cAAgB,KAAK,eAAiB,GAC3C,KAAK,cAAc,KAAK,GACjB,KASX,WAAW,EAAU,CACjB,YAAK,cAAgB,KAAK,eAAiB,GAC3C,KAAK,cAAc,QAAQ,GACpB,KAQX,OAAO,EAAU,CACb,GAAI,CAAC,KAAK,cACN,MAAO,MAEX,GAAI,EAAU,CACV,GAAM,GAAY,KAAK,cACvB,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,GAAI,IAAa,EAAU,GACvB,SAAU,OAAO,EAAG,GACb,SAKf,MAAK,cAAgB,GAEzB,MAAO,MAQX,cAAe,CACX,MAAO,MAAK,eAAiB,KAIrC,eAAsB,EAAU,CAC5B,YAAY,EAAK,EAAM,CACnB,GAAI,GACJ,QACA,KAAK,KAAO,GACZ,KAAK,KAAO,GACR,GAAO,AAAa,MAAO,IAApB,UACP,GAAO,EACP,EAAM,QAEV,EAAO,GAAQ,GACf,EAAK,KAAO,EAAK,MAAQ,aACzB,KAAK,KAAO,EACZ,EAAsB,KAAM,GAC5B,KAAK,aAAa,EAAK,eAAiB,IACxC,KAAK,qBAAqB,EAAK,sBAAwB,UACvD,KAAK,kBAAkB,EAAK,mBAAqB,KACjD,KAAK,qBAAqB,EAAK,sBAAwB,KACvD,KAAK,oBAAqB,GAAK,EAAK,uBAAyB,MAAQ,IAAO,OAAS,EAAK,IAC1F,KAAK,QAAU,GAAI,IAAO,CACtB,IAAK,KAAK,oBACV,IAAK,KAAK,uBACV,OAAQ,KAAK,wBAEjB,KAAK,QAAQ,AAAQ,EAAK,SAAb,KAAuB,IAAQ,EAAK,SACjD,KAAK,YAAc,SACnB,KAAK,IAAM,EACX,GAAM,GAAU,EAAK,QAAU,GAC/B,KAAK,QAAU,GAAI,GAAQ,QAC3B,KAAK,QAAU,GAAI,GAAQ,QAC3B,KAAK,aAAe,EAAK,cAAgB,GACrC,KAAK,cACL,KAAK,OAEb,aAAa,EAAG,CACZ,MAAK,WAAU,OAEf,MAAK,cAAgB,CAAC,CAAC,EAChB,MAFI,KAAK,cAIpB,qBAAqB,EAAG,CACpB,MAAI,KAAM,OACC,KAAK,sBAChB,MAAK,sBAAwB,EACtB,MAEX,kBAAkB,EAAG,CACjB,GAAI,GACJ,MAAI,KAAM,OACC,KAAK,mBAChB,MAAK,mBAAqB,EACzB,GAAK,KAAK,WAAa,MAAQ,IAAO,QAAkB,EAAG,OAAO,GAC5D,MAEX,oBAAoB,EAAG,CACnB,GAAI,GACJ,MAAI,KAAM,OACC,KAAK,qBAChB,MAAK,qBAAuB,EAC3B,GAAK,KAAK,WAAa,MAAQ,IAAO,QAAkB,EAAG,UAAU,GAC/D,MAEX,qBAAqB,EAAG,CACpB,GAAI,GACJ,MAAI,KAAM,OACC,KAAK,sBAChB,MAAK,sBAAwB,EAC5B,GAAK,KAAK,WAAa,MAAQ,IAAO,QAAkB,EAAG,OAAO,GAC5D,MAEX,QAAQ,EAAG,CACP,MAAK,WAAU,OAEf,MAAK,SAAW,EACT,MAFI,KAAK,SAUpB,sBAAuB,CAEnB,AAAI,CAAC,KAAK,eACN,KAAK,eACL,KAAK,QAAQ,WAAa,GAE1B,KAAK,YAUb,KAAK,EAAI,CACL,GAAI,CAAC,KAAK,YAAY,QAAQ,QAC1B,MAAO,MACX,KAAK,OAAS,GAAI,GAAS,KAAK,IAAK,KAAK,MAC1C,GAAM,GAAS,KAAK,OACd,EAAO,KACb,KAAK,YAAc,UACnB,KAAK,cAAgB,GAErB,GAAM,GAAiB,EAAG,EAAQ,OAAQ,UAAY,CAClD,EAAK,SACL,GAAM,MAGJ,EAAW,EAAG,EAAQ,QAAS,AAAC,GAAQ,CAC1C,EAAK,UACL,EAAK,YAAc,SACnB,KAAK,aAAa,QAAS,GAC3B,AAAI,EACA,EAAG,GAIH,EAAK,yBAGb,GAAI,AAAU,KAAK,WAAf,GAAyB,CACzB,GAAM,GAAU,KAAK,SACrB,AAAI,IAAY,GACZ,IAGJ,GAAM,GAAQ,KAAK,aAAa,IAAM,CAClC,IACA,EAAO,QAEP,EAAO,KAAK,QAAS,GAAI,OAAM,aAChC,GACH,AAAI,KAAK,KAAK,WACV,EAAM,QAEV,KAAK,KAAK,KAAK,UAAsB,CACjC,aAAa,KAGrB,YAAK,KAAK,KAAK,GACf,KAAK,KAAK,KAAK,GACR,KAQX,QAAQ,EAAI,CACR,MAAO,MAAK,KAAK,GAOrB,QAAS,CAEL,KAAK,UAEL,KAAK,YAAc,OACnB,KAAK,aAAa,QAElB,GAAM,GAAS,KAAK,OACpB,KAAK,KAAK,KAAK,EAAG,EAAQ,OAAQ,KAAK,OAAO,KAAK,OAAQ,EAAG,EAAQ,OAAQ,KAAK,OAAO,KAAK,OAAQ,EAAG,EAAQ,QAAS,KAAK,QAAQ,KAAK,OAAQ,EAAG,EAAQ,QAAS,KAAK,QAAQ,KAAK,OAAQ,EAAG,KAAK,QAAS,UAAW,KAAK,UAAU,KAAK,QAOvP,QAAS,CACL,KAAK,aAAa,QAOtB,OAAO,EAAM,CACT,KAAK,QAAQ,IAAI,GAOrB,UAAU,EAAQ,CACd,KAAK,aAAa,SAAU,GAOhC,QAAQ,EAAK,CACT,KAAK,aAAa,QAAS,GAQ/B,OAAO,EAAK,EAAM,CACd,GAAI,GAAS,KAAK,KAAK,GACvB,MAAK,IACD,GAAS,GAAI,IAAO,KAAM,EAAK,GAC/B,KAAK,KAAK,GAAO,GAEd,EAQX,SAAS,EAAQ,CACb,GAAM,GAAO,OAAO,KAAK,KAAK,MAC9B,OAAW,KAAO,GAEd,GAAI,AADW,KAAK,KAAK,GACd,OACP,OAGR,KAAK,SAQT,QAAQ,EAAQ,CACZ,GAAM,GAAiB,KAAK,QAAQ,OAAO,GAC3C,OAAS,GAAI,EAAG,EAAI,EAAe,OAAQ,IACvC,KAAK,OAAO,MAAM,EAAe,GAAI,EAAO,SAQpD,SAAU,CACN,KAAK,KAAK,QAAQ,AAAC,GAAe,KAClC,KAAK,KAAK,OAAS,EACnB,KAAK,QAAQ,UAOjB,QAAS,CACL,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,QAAQ,gBACT,KAAK,QACL,KAAK,OAAO,QAOpB,YAAa,CACT,MAAO,MAAK,SAOhB,QAAQ,EAAQ,CACZ,KAAK,UACL,KAAK,QAAQ,QACb,KAAK,YAAc,SACnB,KAAK,aAAa,QAAS,GACvB,KAAK,eAAiB,CAAC,KAAK,eAC5B,KAAK,YAQb,WAAY,CACR,GAAI,KAAK,eAAiB,KAAK,cAC3B,MAAO,MACX,GAAM,GAAO,KACb,GAAI,KAAK,QAAQ,UAAY,KAAK,sBAC9B,KAAK,QAAQ,QACb,KAAK,aAAa,oBAClB,KAAK,cAAgB,OAEpB,CACD,GAAM,GAAQ,KAAK,QAAQ,WAC3B,KAAK,cAAgB,GACrB,GAAM,GAAQ,KAAK,aAAa,IAAM,CAClC,AAAI,EAAK,eAET,MAAK,aAAa,oBAAqB,EAAK,QAAQ,UAEhD,GAAK,eAET,EAAK,KAAK,AAAC,GAAQ,CACf,AAAI,EACA,GAAK,cAAgB,GACrB,EAAK,YACL,KAAK,aAAa,kBAAmB,IAGrC,EAAK,kBAGd,GACH,AAAI,KAAK,KAAK,WACV,EAAM,QAEV,KAAK,KAAK,KAAK,UAAsB,CACjC,aAAa,MASzB,aAAc,CACV,GAAM,GAAU,KAAK,QAAQ,SAC7B,KAAK,cAAgB,GACrB,KAAK,QAAQ,QACb,KAAK,aAAa,YAAa,KAOjC,EAAQ,GACd,WAAgB,EAAK,EAAM,CACvB,AAAI,MAAO,IAAQ,UACf,GAAO,EACP,EAAM,QAEV,EAAO,GAAQ,GACf,GAAM,GAAS,GAAI,EAAK,EAAK,MAAQ,cAC/B,EAAS,EAAO,OAChB,EAAK,EAAO,GACZ,EAAO,EAAO,KACd,EAAgB,EAAM,IAAO,IAAQ,GAAM,GAAI,KAC/C,EAAgB,EAAK,UACvB,EAAK,yBACL,AAAU,EAAK,YAAf,IACA,EACA,EACJ,MAAI,GACA,EAAK,GAAI,GAAQ,EAAQ,GAGpB,GAAM,IACP,GAAM,GAAM,GAAI,GAAQ,EAAQ,IAEpC,EAAK,EAAM,IAEX,EAAO,OAAS,CAAC,EAAK,OACtB,GAAK,MAAQ,EAAO,UAEjB,EAAG,OAAO,EAAO,KAAM,GAIlC,OAAO,OAAO,EAAQ,CAClB,UACA,UACA,GAAI,EACJ,QAAS,IC56Bb,GAAM,GAAO,SAAS,eAAe,QAC/B,GAAS,uCACT,GAAS,6CAGT,EAAS,EAAG,CACd,KAAM,AAAC,GAAO,CACV,GAAM,GAAS,aAAa,QAAQ,UACpC,AAAG,MAAO,IAAU,SAChB,EAAG,CACC,MAAM,IAGV,EAAG,CACC,MAAM,YAOhB,GAAQ,SAAS,eAAe,eAEtC,EAAO,GAAG,QAAS,IAAK,CACpB,GAAM,MAAM,QAAU,UAG1B,GAAI,IAAiB,GACjB,EAAQ,SACR,EAAc,EAElB,EAAO,GAAG,kBAAmB,IAAI,CAC7B,GAAiB,KAGrB,EAAO,GAAG,UAAW,AAAC,GAAO,CAwBzB,GAvBA,EAAK,QAAQ,GAAO,CAChB,GAAI,GAAO,SAAS,cAAc,OAClC,EAAK,UAAU,IAAI,QACnB,EAAK,YAAY,GACjB,GAAI,GAAM,SAAS,cAAc,OACjC,EAAI,UAAU,IAAI,OAClB,EAAI,YAAc,EAAI,IACtB,EAAI,GAAK,EAAI,KACb,EAAK,MAAM,gBAAkB,EAAO,EAAI,KACrC,IAAkB,IACd,EAAI,IAAM,aAAa,QAAQ,WAC9B,GAAI,GAAK,EAAI,GACb,EAAQ,EAAI,KACZ,EAAc,EAAI,KAI1B,EAAK,YAAY,GACjB,GAAI,GAAM,SAAS,cAAc,OACjC,EAAI,UAAU,IAAI,QAClB,EAAI,YAAc,EAAI,KACtB,EAAK,YAAY,KAElB,IAAkB,GAAK,CACtB,GAAM,GAAS,SAAS,eAAe,aAAa,QAAQ,WAC5D,AAAG,IAAW,KACV,GAAK,UAAY,EAAO,UAAa,EAAO,GAAM,GAClD,EAAK,WAAa,EAAO,WAAc,EAAM,GAAM,IAEnD,MAAM,4GAKlB,GAAM,IAAQ,SAAS,eAAe,SAChC,GAAa,GAAM,SAAS,SAElC,GAAM,SAAW,UAAmB,CAChC,GAAM,GAAS,SAAS,eAAe,SACvC,SAAQ,GAAW,MACnB,AAAG,GAAS,GACR,GAAO,YAAc,oBACrB,EAAO,MAAM,QAAU,QACvB,SAAS,iBAAiB,QAAS,AAAC,GAAK,CACrC,EAAO,MAAM,QAAU,OACvB,SAAS,oBAAoB,QAAU,MAI3C,EAAO,KAAK,aAAc,GACvB,IAGX,EAAO,GAAG,YAAa,AAAC,GAAI,CACxB,GAAM,GAAS,SAAS,eAAe,SACvC,EAAO,YAAc,0BACrB,EAAO,MAAM,QAAU,QACvB,SAAS,iBAAiB,QAAS,AAAC,GAAK,CACrC,EAAO,MAAM,QAAU,OACvB,SAAS,oBAAoB,QAAU,OAK/C,EAAO,GAAG,UAAW,IAAI,CACrB,GAAM,GAAS,SAAS,eAAe,SACvC,EAAO,YAAc,kCACrB,EAAO,MAAM,QAAU,QACvB,SAAS,iBAAiB,QAAS,AAAC,GAAK,CACrC,EAAO,MAAM,QAAU,OACvB,SAAS,oBAAoB,QAAU,OAI/C,EAAO,GAAG,YAAa,AAAC,GAAK,CACzB,GAAM,MAAM,QAAU,OACtB,aAAa,QAAQ,SAAU,GAC/B,QAAQ,IAAI,OACZ,GAAI,GAAW,SAAS,cAAc,OACtC,EAAS,UAAU,IAAI,QACvB,EAAK,YAAY,GACjB,GAAI,GAAU,SAAS,cAAc,OACrC,EAAQ,UAAU,IAAI,OACtB,EAAQ,GAAK,aAAa,QAAQ,UAClC,EAAQ,YAAc,IACtB,EAAS,YAAY,GACrB,GAAI,GAAU,SAAS,cAAc,OACrC,EAAQ,UAAU,IAAI,QACtB,EAAQ,YAAc,EACtB,EAAS,YAAY,GACrB,EAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,GACrD,SAAS,KAAK,MAAM,KAAO,IAE3B,EAAO,KAAK,UAAU,GACtB,GAAI,GAAO,SAAS,eAAe,QACnC,EAAK,MAAM,QAAU,WAGzB,EAAO,GAAG,OAAQ,AAAC,GAAW,CAC1B,EAAS,QAAQ,GAAM,CACnB,GAAI,GAAM,SAAS,eAAe,EAAI,MACtC,GAAI,IAAQ,KAAK,CACb,EAAI,YAAc,EAAI,IACtB,GAAI,GAAO,EAAI,cACf,EAAK,MAAM,gBAAkB,EAAO,EAAI,KACrC,EAAI,KAAO,KACV,GAAK,MAAM,gBAAkB,WAKzC,GAAI,GAAO,aAAa,QAAQ,UAC5B,EAAQ,SAAS,eAAe,GACpC,GAAI,IAAU,MACP,QAAO,UAAU,OAAO,KAAiB,IACxC,GAAM,YAAc,GAExB,EAAO,KAAK,aAAa,EAAY,GAClC,GAAe,KAAU,CACxB,GAAI,GAAS,EAAM,cACnB,EAAO,MAAM,gBAAkB,OAIvC,GAAM,GAAO,SAAS,eAAe,WAC/B,EAAO,SAAS,eAAe,WAC/B,EAAO,SAAS,eAAe,WAC/B,EAAO,SAAS,eAAe,WAC/B,EAAO,SAAS,eAAe,WACrC,AAAG,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,QAEzB,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,QAEzB,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,QAEzB,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,QAEzB,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,QAEzB,EAAK,aAAe,KACnB,GAAK,MAAM,MAAQ,OACnB,EAAK,MAAM,WAAa,UAKhC,EAAO,GAAG,aAAa,AAAC,GAAU,CAC9B,GAAI,GAAU,SAAS,cAAc,OACrC,EAAQ,UAAU,IAAI,QACtB,EAAK,YAAY,GACjB,GAAI,GAAS,SAAS,cAAc,OACpC,EAAO,UAAU,IAAI,OACrB,EAAO,GAAK,EACZ,EAAO,YAAc,IACrB,EAAQ,YAAY,GACpB,GAAI,GAAS,SAAS,cAAc,OACpC,EAAO,UAAU,IAAI,QACrB,EAAO,YAAc,EACrB,EAAQ,YAAY,KAGxB,GAAM,IAAW,SAAS,eAAe,OACrC,GAAS,KAAK,MACd,GAAM,KAAK,MAAO,IAAS,eAAkB,KAAO,GAAK,GAAK,KAClE,GAAS,YAAc,OAAO,GAC9B,GAAS,MAAQ,8BAA8B,GAAI,OAInD,GAAI,GAAa,GACb,EAAW,GAET,GAAW,SAAS,eAAe,SACnC,EAAa,SAAS,eAAe,cAE3C,GAAS,QAAU,IAAI,CACnB,GAAM,GAAO,aAAa,QAAQ,UAC5B,EAAQ,SAAS,eAAe,GACtC,EAAW,MAAM,QAAU,OAC3B,EAAa,GACb,EAAS,MAAM,QAAU,OACzB,EAAW,GAEX,AAAG,IAAS,KACR,WAAU,UAAU,UAAU,oBAAoB,EAAM,UAAU,EAAM,YAAY,4BACpF,EAAW,YAAc,4BACzB,EAAW,MAAM,QAAU,gBAG3B,GAAW,YAAc,uBACzB,EAAW,MAAM,QAAU,iBAGnC,GAAS,aAAe,IAAK,CACzB,EAAW,MAAM,QAAU,QAG/B,GAAM,IAAY,SAAS,eAAe,eACpC,EAAa,SAAS,eAAe,cACrC,GAAc,SAAS,eAAe,eAE5C,GAAU,QAAU,IAAI,CACpB,EAAS,MAAM,QAAU,OACzB,EAAW,GACX,AAAG,GAAc,GACb,GAAW,MAAM,QAAU,OAC3B,EAAa,IAGb,GAAW,MAAM,QAAU,OAC3B,EAAa,KAIrB,GAAY,QAAU,IAAI,CACtB,EAAW,MAAM,QAAU,OAC3B,EAAa,IAGjB,EAAO,GAAG,YAAY,AAAC,GAAO,CAC1B,OAAS,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CACtB,GAAI,GAAa,SAAS,eAAe,UAAU,GACnD,AAAG,EAAK,KAAO,QACX,GAAW,YAAc,EAAK,GAAG,MAErC,GAAI,GAAY,SAAS,eAAe,SAAS,GACjD,AAAG,EAAK,KAAO,QACX,GAAU,YAAc,EAAK,GAAG,QAK5C,GAAM,IAAO,SAAS,eAAe,QAC/B,EAAW,SAAS,eAAe,YACnC,GAAY,SAAS,eAAe,aAE1C,GAAK,QAAU,IAAI,CACf,EAAW,MAAM,QAAU,OAC3B,EAAa,GAEb,AAAG,GAAY,GACX,GAAS,MAAM,QAAU,OACzB,EAAW,IAGX,GAAS,MAAM,QAAU,QACzB,EAAW,KAKnB,GAAU,QAAU,IAAK,CACrB,EAAS,MAAM,QAAU,OACzB,EAAW,IAKf,GAAM,IAAU,SAAS,eAAe,cAClC,GAAU,SAAS,eAAe,cAClC,GAAU,SAAS,eAAe,cAClC,GAAU,SAAS,eAAe,cAClC,GAAU,SAAS,eAAe,cAElC,EAAS,OAAO,YAAc,SAAS,gBAAgB,aAC7D,SAAS,KAAK,YACR,EAAS,OAAO,aAAc,SAAS,gBAAgB,cAC7D,SAAS,KAAK,aAEd,GAAQ,QAAU,IAAK,CACnB,GAAI,GAAW,SAAS,eAAe,YAAY,YACnD,GAAG,IAAY,KAAK,CACpB,GAAI,GAAW,SAAS,eAAe,GACvC,GAAG,GAAY,KAAK,CAChB,GAAI,GAAS,aAAa,QAAQ,UAClC,EAAY,SAAS,eAAe,GAExC,AAAG,IAAY,MACf,GAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,MAIzD,GAAQ,QAAU,IAAK,CACnB,GAAI,GAAW,SAAS,eAAe,YAAY,YACnD,GAAG,IAAY,KAAK,CACpB,GAAI,GAAW,SAAS,eAAe,GACvC,GAAG,GAAY,KAAK,CAChB,GAAI,GAAS,aAAa,QAAQ,UAClC,EAAY,SAAS,eAAe,GAExC,AAAG,IAAY,MACf,GAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,MAIzD,GAAQ,QAAU,IAAK,CACnB,GAAI,GAAW,SAAS,eAAe,YAAY,YACnD,GAAG,IAAY,KAAK,CACpB,GAAI,GAAW,SAAS,eAAe,GACvC,GAAG,GAAY,KAAK,CAChB,GAAI,GAAS,aAAa,QAAQ,UAClC,EAAY,SAAS,eAAe,GAExC,AAAG,IAAY,MACf,GAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,MAIzD,GAAQ,QAAU,IAAK,CACnB,GAAI,GAAW,SAAS,eAAe,YAAY,YACnD,GAAG,IAAY,KAAK,CACpB,GAAI,GAAW,SAAS,eAAe,GACvC,GAAG,GAAY,KAAK,CAChB,GAAI,GAAS,aAAa,QAAQ,UAClC,EAAY,SAAS,eAAe,GAExC,AAAG,IAAY,MACf,GAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,MAIzD,GAAQ,QAAU,IAAK,CACnB,GAAI,GAAW,SAAS,eAAe,YAAY,YACnD,GAAG,IAAY,KAAK,CACpB,GAAI,GAAW,SAAS,eAAe,GACvC,GAAG,GAAY,KAAK,CAChB,GAAI,GAAS,aAAa,QAAQ,UAClC,EAAY,SAAS,eAAe,GAExC,AAAG,IAAY,MACf,GAAK,UAAY,EAAS,UAAa,EAAO,GAAM,GACpD,EAAK,WAAa,EAAS,WAAc,EAAM,GAAM,MAKzD,GAAM,IAAY,SAAS,eAAe,UAE1C,GAAU,QAAU,IAAM,CACtB,GAAM,GAAO,aAAa,QAAQ,UAClC,GAAG,IAAS,KAAK,CACb,GAAI,GAAS,SAAS,eAAe,GACrC,EAAK,UAAY,EAAO,UAAa,EAAO,GAAM,GAClD,EAAK,WAAa,EAAO,WAAc,EAAM,GAAM,KAI3D,GAAM,IAAc,SAAS,eAAe,eACtC,GAAc,SAAS,eAAe,eACxC,GAAY,GAEhB,GAAY,QAAU,IAAK,CAEvB,AAAG,IAAa,GACZ,IAAY,MAAM,QAAU,QAC5B,GAAY,IAGZ,IAAY,MAAM,QAAU,OAC5B,GAAY,KAKpB,EAAO,GAAG,GAAG,YAAY,AAAC,GAAU,CAChC,OAAO,SAAS,WAKpB,GAAI,IAAO,SAAS,eAAe,QACnC,SAAS,iBAAiB,QAAS,GAAS,CACxC,GAAI,EAAM,OAAS,QAAS,CAC1B,GAAK,MAAM,QAAU,OACrB,GAAM,GAAO,aAAa,QAAQ,UACjC,GAAG,IAAS,KAAK,CAChB,GAAI,GAAM,SAAS,eAAe,GAClC,GAAG,IAAQ,KAAK,CACZ,IACA,EAAI,YAAc,EAClB,GAAI,GAAO,EAAI,cACf,EAAK,MAAM,gBAAkB,EAAO,GACpC,MAAM,GAAO,CAAC,QAAS,CACnB,YAAa,MACX,KAAK,AAAC,GACD,EAAS,QACf,KAAK,AAAC,GAAS,CACd,EAAK,MAAM,gBAAkB,OAAO,EAAK,GAAG,MAC5C,EAAK,MAAM,MAAQ,yBAOrC,GAAY,QAAU,IAAK,CACvB,GAAM,GAAO,aAAa,QAAQ,UAElC,GADA,GAAK,MAAM,QAAU,OAClB,IAAS,KAAK,CACb,GAAI,GAAM,SAAS,eAAe,GACtC,GAAG,IAAQ,KAAK,CACZ,IACA,EAAI,YAAc,EAClB,GAAI,GAAO,EAAI,cACf,EAAK,MAAM,gBAAkB,EAAO,GACpC,MAAM,GAAO,CAAC,QAAS,CACnB,YAAa,MACX,KAAK,AAAC,GACD,EAAS,QACf,KAAK,AAAC,GAAS,CACd,EAAK,MAAM,gBAAkB,OAAO,EAAK,GAAG,MAC5C,EAAK,MAAM,MAAQ,uBAOjC,WAAgB,EAAM,CAClB,GAAI,GAAM,CAAC,EAAE,EAAE,GACf,SAAI,GAAK,KAAK,MAAM,IAAM,GAAK,MAAK,GACpC,EAAI,GAAK,KAAK,MAAM,IAAM,GAAK,MAAK,GACpC,EAAI,GAAM,IAAM,GAAI,KAAK,MAAM,KAAK,IAAI,KAAO,GAAO,GAC/C,OAAO,EAAI,MAAM,EAAI,MAAM,EAAI",
  "names": []
}
